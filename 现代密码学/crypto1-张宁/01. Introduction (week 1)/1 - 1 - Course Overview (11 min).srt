1
00:00:00,000 --> 00:00:03,785
Hello, my name is Dan Boneh, and I'd like to welcome you to my course on cryptography

2
00:00:03,785 --> 00:00:07,522
that I'll be teaching at Stanford University this quarter. This quarter, I'm experimenting

3
00:00:07,522 --> 00:00:11,652
with recording the lectures and having the students watch the lectures online.

4
00:00:11,652 --> 00:00:15,438
In fact, anyone is welcome to watch the lectures, and join the course.

5
00:00:15,438 --> 00:00:19,211
This is an experiment, so we'll see how it goes. My goals for this

6
00:00:19,211 --> 00:00:23,151
course are basically to teach you how cryptographic primitives work.

7
00:00:23,151 --> 00:00:27,449
But more importantly I'd like to teach you how to use cryptographic primitives correctly

8
00:00:27,449 --> 00:00:30,928
and reason about the security of your constructions. We will see various

9
00:00:30,928 --> 00:00:35,175
abstractions of cryptographic primitives, and we'll do some security proofs.

10
00:00:35,175 --> 00:00:39,013
My goal is that by the end of the course you'll be able to reason about the security of cryptographic

11
00:00:39,013 --> 00:00:43,211
constructions and be able to break ones that are not secure.

12
00:00:43,211 --> 00:00:47,424
Now I'd like to say a few words on how I would like you to take the class. First of all,

13
00:00:47,424 --> 00:00:51,688
I'm a big believer in taking notes as you listen to the lectures. So I would really

14
00:00:51,688 --> 00:00:55,953
encourage you to summarize and take notes in your own words of the material that's being presented.

15
00:00:55,953 --> 00:00:59,909
Also I should mention that on the videos, I'm able to go much faster

16
00:00:59,909 --> 00:01:03,865
than I would go in a normal classroom. And so I would encourage you to

17
00:01:03,865 --> 00:01:07,924
periodically pause the video and think about the material that's being covered

18
00:01:07,924 --> 00:01:12,038
and not move forward until the material is clear in your mind. Also from time to time,

19
00:01:12,038 --> 00:01:15,961
the video will pause and pop-up questions will come up.

20
00:01:15,961 --> 00:01:20,347
These are intended to kinda help you along with the material, and I would really encourage you to answer

21
00:01:20,347 --> 00:01:24,682
those questions by yourselves rather than skip them. Usually the questions

22
00:01:24,682 --> 00:01:28,811
are about the material that has just been covered, and so it shouldn't be too difficult to answer

23
00:01:28,811 --> 00:01:32,991
the questions. So I would really encourage you to do them rather than skip them.

24
00:01:32,991 --> 00:01:37,016
Now, by now I'm sure everybody taking the class knows that cryptography is used

25
00:01:37,016 --> 00:01:41,843
everywhere computers are. It's a very common tool that's used to protect data.

26
00:01:41,843 --> 00:01:46,760
For example, web traffic is protected using a protocol called HTTPS.

27
00:01:46,760 --> 00:01:51,193
Wireless traffic, for example, Wi-Fi traffic is protected using the, WPA2

28
00:01:51,193 --> 00:01:55,656
protocol, that's part of 801.11i. Cell phone traffic is protected

29
00:01:55,656 --> 00:02:00,177
using an encryption mechanism in GSM. Bluetooth
traffic is protected using cryptography,

30
00:02:00,177 --> 00:02:04,640
and so on. We're gonna see how these various systems work. In fact, we're gonna

31
00:02:04,640 --> 00:02:09,276
cover SSL, and in fact, even 802.11i in quite a bit of detail. And you'll see how

32
00:02:09,276 --> 00:02:13,275
these system work in practice. Cryptography is also used for protecting files

33
00:02:13,275 --> 00:02:17,564
that are stored on disc by encrypting them. So if the disc is stolen,

34
00:02:17,564 --> 00:02:22,444
the files are not compromised. It's also used for content protection. For example

35
00:02:22,444 --> 00:02:27,480
when you buy DVDs and Blu-Ray disks, the movies on these disks are encrypted, in

36
00:02:27,480 --> 00:02:32,516
particular DVD uses a system called CSS, the Content Scrambling System, CSS, and

37
00:02:32,516 --> 00:02:37,934
Blu-Ray uses a system called AACS. We'll talk about how CSS and AACS work.

38
00:02:37,934 --> 00:02:43,033
It turns out that CSS is a fairly easy system to break.

39
00:02:43,033 --> 00:02:48,132
And we'll talk about how, we'll do some cryptanalysis and actually show how to break encryption that's used in CSS.

40
00:02:48,132 --> 00:02:52,532
Cryptography is also used for user authentication and in many, many, many

41
00:02:52,532 --> 00:02:56,832
other applications that we'll talk about in the next segments.  Now I wanna go back

42
00:02:56,832 --> 00:03:00,642
to secure communication, and talk about the case where, here, we have a laptop

43
00:03:00,642 --> 00:03:04,753
trying to communicate with a web server. This is a good time to also introduce our friends,

44
00:03:04,753 --> 00:03:08,964
Alice and Bob, who are gonna be with us throughout the quarter. Essentially Alice

45
00:03:08,964 --> 00:03:13,305
is trying to communicate securely with Bob. Here Alice is on the laptop and Bob

46
00:03:13,305 --> 00:03:18,223
is on the server. The protocol that's used to do that is called HTTPS, but in fact,

47
00:03:18,223 --> 00:03:22,717
the actual protocol is called SSL. Sometimes it's called TLS.

48
00:03:22,717 --> 00:03:27,695
And the goals of these protocols is to basically make sure that as this data travels across the

49
00:03:27,695 --> 00:03:32,492
network, an attacker first of all can't eavesdrop on this data. Second of all, an

50
00:03:32,492 --> 00:03:37,592
attacker can't modify the data while it's in the network. So no eavesdropping and no tampering.

51
00:03:37,592 --> 00:03:42,413
Now as I said the protocol that's used to secure web traffic called TLS

52
00:03:42,413 --> 00:03:46,998
actually consists of two parts. The first part is called the handshake protocol

53
00:03:46,998 --> 00:03:51,955
where Alice and Bob talk with one another and at the end of the handshake

54
00:03:51,955 --> 00:03:56,601
handshake basically a shared secret key appears between the two of them. So both

55
00:03:56,601 --> 00:04:01,093
Alice and Bob know this secret key, but an attacker looking at the conversation has

56
00:04:01,093 --> 00:04:05,167
no idea what the key K is. Now, the way you established your secret key, the way

57
00:04:05,167 --> 00:04:09,503
you do the handshake, is using public key cryptography techniques, which we're gonna talk

58
00:04:09,503 --> 00:04:13,473
about in the second part of the course. Now once Alice and Bob have the shared key,

59
00:04:13,473 --> 00:04:17,025
you can use this key to communicate securely by properly

60
00:04:17,025 --> 00:04:21,364
encrypting data between them. And in fact this is gonna be the first part of the course,

61
00:04:21,364 --> 00:04:25,740
which is essentially once the two sides have a shared secret key, how do they use

62
00:04:25,740 --> 00:04:30,060
that secret key to encrypt and protect data that goes back and forth between them?

63
00:04:30,060 --> 00:04:34,404
Now, as I said, another application of cryptography is to protect

64
00:04:34,404 --> 00:04:38,934
files on disk. So, here you have a file that happens to be encrypted, so that even

65
00:04:38,934 --> 00:04:43,407
if the disk is stolen, an attacker can't actually read the contents in the file.

66
00:04:43,407 --> 00:04:47,881
And, if an attacker tries to modify the data on disk, the data in the file while

67
00:04:47,881 --> 00:04:52,241
it's on disk, when Alice tries to decrypt this file, that will be detected, and

68
00:04:52,241 --> 00:04:56,205
she'll then basically ignore the contents of the file. So we have both confidentiality

69
00:04:56,205 --> 00:05:00,999
confidentiality and integrity for files stored on disk. Now I want to make a minor philosophical

70
00:05:00,999 --> 00:05:06,098
point, that in fact storing encrypted files on disk is very much the same

71
00:05:06,098 --> 00:05:10,872
as protecting communication between Alice and Bob. In particular, when you

72
00:05:10,872 --> 00:05:15,379
store files on disk, it's basically Alice who stores the file today wants to read

73
00:05:15,379 --> 00:05:19,580
the file tomorrow. So rather than communicating between two parties Alice and Bob,

74
00:05:19,580 --> 00:05:23,713
in the case of a stored disk encryption, it's Alice today who is

75
00:05:23,713 --> 00:05:27,966
communicating with Alice tomorrow. But really the two scenarios, secure

76
00:05:27,966 --> 00:05:32,632
communications, and secure files, are kind of philosophically the same. Now, the

77
00:05:32,632 --> 00:05:37,001
building block for securing traffic is what's called symmetric encryption

78
00:05:37,001 --> 00:05:41,666
systems. And we're gonna talk, in the first half of the course extensively about

79
00:05:41,666 --> 00:05:46,035
symmetric encryption systems. So in a symmetric encryption system, basically, the two parties,

80
00:05:46,035 --> 00:05:50,699
Alice and Bob, share a secret key k, which the attacker does not

81
00:05:50,699 --> 00:05:55,069
know. Only they know the secret key k. Now, they're gonna use a cipher which

82
00:05:55,069 --> 00:05:59,755
consists of these two algorithms, E and D. E is called an encryption algorithm and D

83
00:05:59,755 --> 00:06:04,179
is called the decryption algorithm. The encryption algorithm takes the message and

84
00:06:04,179 --> 00:06:08,051
the key as inputs, and produces a corresponding ciphertext. And the

85
00:06:08,051 --> 00:06:12,564
decryption algorithm does the opposite. It takes the ciphertext as input along with the key

86
00:06:12,564 --> 00:06:16,594
key and produces the corresponding message. Now, a very important point that

87
00:06:16,594 --> 00:06:21,108
I would like to stress. I'm only gonna say this once now and never again, but it is an

88
00:06:21,108 --> 00:06:25,467
extremely important point. And that is: that the algorithms E and D, the actual

89
00:06:25,467 --> 00:06:30,400
encryption algorithms are publicly known. Adversary knows exactly how they work. The

90
00:06:30,400 --> 00:06:34,411
only thing that's kept secret is the secret key k. Other than that

91
00:06:34,411 --> 00:06:38,880
everything else is completely public and it's really important to realize that you

92
00:06:38,880 --> 00:06:43,080
should only use algorithms that are public because those algorithms have been

93
00:06:43,080 --> 00:06:47,685
peer-reviewed by a very large community of hundreds of people for many, many, many years,

94
00:06:47,685 --> 00:06:52,460
and these algorithms only begin to be used once this community has shown that

95
00:06:52,460 --> 00:06:56,952
they cannot be broken, essentially. So in fact, if somebody comes to you and says, hey, I have a proprietary

96
00:06:56,952 --> 00:07:01,500
cipher that you might want to use, the answer usually should be that

97
00:07:01,500 --> 00:07:06,162
you stick to standards, to standard algorithms, and not use a proprietary

98
00:07:06,162 --> 00:07:10,710
cipher. In fact, there are many examples of proprietary ciphers that, as soon as

99
00:07:10,710 --> 00:07:14,690
they were reverse engineered, they were easily broken by simple analysis.

100
00:07:14,690 --> 00:07:19,716
Now, even in the simple cases of symmetric encryption which we're gonna discuss

101
00:07:19,716 --> 00:07:24,782
in the first half of the course, there are actually two cases that we're gonna discuss in turn.

102
00:07:24,782 --> 00:07:29,974
The first, is when every key is only used to encrypt a

103
00:07:29,974 --> 00:07:34,597
single message, we call these one time keys. Okay. So for example, when you

104
00:07:34,597 --> 00:07:39,853
encrypt email messages, it's very common that every single email is encrypted using

105
00:07:39,853 --> 00:07:44,922
a different symmetric key. Yeah? Different symmetric cipher key. Because the key is

106
00:07:44,922 --> 00:07:49,588
used to encrypt only one message there are actually fairly efficient and simple ways of

107
00:07:49,588 --> 00:07:54,090
encrypting messages using these one time keys and we'll discuss those actually

108
00:07:54,090 --> 00:07:58,371
in the next module. Now there are many cases in fact where keys

109
00:07:58,371 --> 00:08:02,488
need to be used to encrypt multiple messages. We call these many time keys.

110
00:08:02,488 --> 00:08:06,715
For example, when you encrypt files in a file system the same key is used

111
00:08:06,715 --> 00:08:11,326
to encrypt many many, different files. And it turns out if the key is now going to be used to encrypt

112
00:08:11,326 --> 00:08:15,662
multiple messages we need a little bit of more machinery to make sure that the

113
00:08:15,662 --> 00:08:19,729
encryption system is secure. In fact after we talk about the one-time keys, we

114
00:08:19,729 --> 00:08:23,570
will move over and talk about encryption modes that are specifically designed for

115
00:08:23,570 --> 00:08:27,505
many-time keys. And we'll see that there are a couple more steps that need to be taken to

116
00:08:27,505 --> 00:08:31,267
ensure security in those cases. Okay, the last point I wanna make

117
00:08:31,267 --> 00:08:35,346
is that there are a couple of important things to remember about cryptography. First of all,

118
00:08:35,346 --> 00:08:39,689
cryptography, of course, is a fantastic tool for protecting information in computer systems.

119
00:08:39,689 --> 00:08:43,820
However, it's also very important that cryptography has its limitations.

120
00:08:43,820 --> 00:08:48,225
First of all, cryptography is really not the solution to all security problems.

121
00:08:48,225 --> 00:08:52,546
For example, if you have software bugs then very often cryptography is not

122
00:08:52,546 --> 00:08:56,925
going to be able to help you. Similarly, if you're worried about social engineering attacks,

123
00:08:56,925 --> 00:09:01,587
where the attacker tries to fool the user into taking actions

124
00:09:01,587 --> 00:09:05,966
that are going to hurt the user, then cryptography is very often actually not

125
00:09:05,966 --> 00:09:10,328
going to help you. So it's very important that although it's a fabulous tool, it's not the

126
00:09:10,328 --> 00:09:14,798
solution to all security problems. Now another very important point is that cryptography

127
00:09:14,798 --> 00:09:19,108
essentially becomes useless if it's implemented incorrectly. So, for example,

128
00:09:19,108 --> 00:09:23,270
there are a number of systems that work perfectly fine. And we'll see examples of those

129
00:09:23,270 --> 00:09:27,487
systems, that, in fact, allow Alice and Bob to communicate. And,

130
00:09:27,487 --> 00:09:31,595
in fact, messages that Alice sent to Bob, Bob can receive and decrypt. However,

131
00:09:31,595 --> 00:09:35,776
because cryptography is implemented incorrectly, the systems are completely insecure.

132
00:09:35,776 --> 00:09:40,537
Actually I should say that I like to mention an old encryption standard

133
00:09:40,537 --> 00:09:45,240
called WEP this is used for encrypting Wi-Fi traffic. WEP contains many

134
00:09:45,240 --> 00:09:49,942
mistakes in it and often when I wanna show you how not to do things in cryptography

135
00:09:49,942 --> 00:09:54,581
I will point to how things were done in WEP as an example. So for me, it's very fortunate to have an example,

136
00:09:54,581 --> 00:09:58,610
a protocol I can point to for how not to do things. And finally, a very

137
00:09:58,610 --> 00:10:02,540
important point that I'd like you to remember is that cryptography is not

138
00:10:02,540 --> 00:10:06,270
something you should try to invent and design yourself. As I said, there are

139
00:10:06,270 --> 00:10:09,902
standards in cryptography, standard cryptographic primitives which we're gonna discuss

140
00:10:09,902 --> 00:10:13,795
at length during this course. And primarily you're supposed to use

141
00:10:13,795 --> 00:10:17,656
these standard cryptographic primitives, and not invent things, these primitives,

142
00:10:17,656 --> 00:10:21,624
yourself. The standards have all gone through, many years of

143
00:10:21,624 --> 00:10:25,860
review by hundreds of people, and that's not something that's going to happen to an ad hoc  design.

144
00:10:25,860 --> 00:10:29,668
And, as I said, over the years there are many examples of

145
00:10:29,668 --> 00:10:33,797
ad hoc designs that were immediately broken as soon as they were analyzed.
