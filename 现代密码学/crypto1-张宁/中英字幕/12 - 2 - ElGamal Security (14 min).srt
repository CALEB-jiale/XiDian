1
00:00:00,000 --> 00:00:03,457
In this segment, we're gonna study the
security of the ElGamal public key

2
00:00:00,000 --> 00:00:03,457
在本节中 我们将会研究EIGamal公钥加密系统的安全性

3
00:00:03,457 --> 00:00:07,105
encryption system. So let me remind you
that when we first presented the

4
00:00:03,457 --> 00:00:07,105
让我来提醒一下大家 当我们第一次展示Diffie-Hellman协议的时候

5
00:00:07,105 --> 00:00:11,349
Diffie-Hellman protocol, we said that the
security is based on the assumption that

6
00:00:07,105 --> 00:00:11,349
我们说过 其安全性是建立在假定

7
00:00:11,349 --> 00:00:14,972
says that given G, G to the A, G to the B,
it's difficult to compute the

8
00:00:11,349 --> 00:00:14,972
给定G G^A和G^B上的 很难计算出

9
00:00:14,972 --> 00:00:19,269
Diffie-Hellman secret, G to the AB. This
is basically what the attacker has to do.

10
00:00:14,972 --> 00:00:19,269
Diffie-Hellman密钥G^A 然而这是攻击者不得不做的

11
00:00:19,269 --> 00:00:23,410
He sees Alice's contribution. He sees
Bob's contribution and then his goal is to

12
00:00:19,269 --> 00:00:23,410
他看到Alice的贡献 看得Bob的贡献 他的目标是

13
00:00:23,410 --> 00:00:27,447
figure out what the Diffie-Hellman secret
is. And we said that this problem is

14
00:00:23,410 --> 00:00:27,447
计算出Diffie-Hellman密钥 我们说过这个问题是很困难的

15
00:00:27,447 --> 00:00:31,329
difficult. The statement that the problem
is difficult is what's called the

16
00:00:27,447 --> 00:00:31,329
这个问题的论断是困难的

17
00:00:31,329 --> 00:00:35,413
computational Diffie-Hellman assumption.
So, let's take this assumption more

18
00:00:31,329 --> 00:00:35,413
即Diffie-Hellman假设的计算是困难的 所以 让我们从更为精确的角度来看这个假设

19
00:00:35,413 --> 00:00:39,957
precisely. So, as usual we're going to
look at a finite cyclic group of order N,

20
00:00:35,413 --> 00:00:39,957
通常我们看一个N阶有限循环群

21
00:00:39,957 --> 00:00:43,944
so G is some group, in your head you should be
thinking ZP star, but there could

22
00:00:39,957 --> 00:00:43,944
G是一个群 大家应该把它想成ZP*

23
00:00:43,944 --> 00:00:47,569
be other groups, for example, like an ellipctic curve group. And then we say that

24
00:00:43,944 --> 00:00:47,569
但也可能是其他的群 比如椭圆曲线群 我们说

25
00:00:47,569 --> 00:00:51,727
the computational Diffie-Hellman
assumption. I've often used the shorthand

26
00:00:47,569 --> 00:00:51,727
计算Diffie-Hellman假设 我通常会用缩写

27
00:00:51,727 --> 00:00:56,053
CDH for Computational Diffie Hellman.
We'll say this assumption holds in G if

28
00:00:51,727 --> 00:00:56,053
CDH来代表Diffie-Hellman假设计算 我们会说这个假设在G上成立

29
00:00:56,053 --> 00:01:00,604
the following condition holds, namely for
all efficient algorithms. If we choose a

30
00:00:56,053 --> 00:01:00,604
如果下列条件成立 即对所有的有效算法 如果我们选择一个

31
00:01:00,604 --> 00:01:04,761
random generator, and then we choose
random exponents A, B in ZN. Then when

32
00:01:00,604 --> 00:01:04,761
随机生成元 然后我们随机选择ZN中的指数A B

33
00:01:04,761 --> 00:01:08,975
we give the algorithm G, G to the A, and G
to the B, the probability that the

34
00:01:04,761 --> 00:01:08,975
我们给定算法G为G^A G^B

35
00:01:08,975 --> 00:01:13,638
algorithm will produce the Diffie Hellman
secret is negligible. If this is true for

36
00:01:08,975 --> 00:01:13,638
算法将会得出 Diffie Hellman密钥的可能性是非常低的

37
00:01:13,638 --> 00:01:18,368
all efficient algorithms, then we say that
the CDH assumption holds for G. CDH, as I

38
00:01:13,638 --> 00:01:18,368
如果这对所有有效算法都是成立的 那么我们说CHD假设在G上是成立的

39
00:01:18,368 --> 00:01:23,202
said, stands for Computational Diffie
Hellman. As it turns out, this assumption

40
00:01:18,368 --> 00:01:23,202
正如我说过的 CDH代表 Diffie Hellman假设算法 实际上 这个假设

41
00:01:23,202 --> 00:01:27,643
is not ideal for analyzing the security of
the ElGamal system. And instead I'm gonna

42
00:01:23,202 --> 00:01:27,643
对于分析EIGamal系统的安全性并不理想

43
00:01:27,643 --> 00:01:31,768
go ahead and make a slightly stronger
assumption called a hash Diffie-Hellman

44
00:01:27,643 --> 00:01:31,768
因此我将要介绍一个更加有效的假设 叫做哈希 Diffie Hellman假设

45
00:01:31,768 --> 00:01:35,695
assumption. Okay. So what is hash
Diffie-Hellman assumption? Again, we are

46
00:01:31,768 --> 00:01:35,695
好的  Diffie Hellman假设是什么呢

47
00:01:35,695 --> 00:01:40,379
focusing on a particular group G and now
we're also gonna introduce a hash function

48
00:01:35,695 --> 00:01:40,379
让我们来关注一下确定的群G 现在我们引入一个哈希函数H

49
00:01:40,379 --> 00:01:45,007
H that maps pairs of elements in G into
the key space of some symmetric encryption

50
00:01:40,379 --> 00:01:45,007
它把G中的元素映射到某个对称加密系统的密钥空间中

51
00:01:45,007 --> 00:01:49,133
system. And then we say that the hash
Diffie-Hellman a ssumption, or HDH for

52
00:01:45,007 --> 00:01:49,133
那么我们就说哈希Diffie-Hellman假设 或简称HDH

53
00:01:49,133 --> 00:01:53,482
short, holds for this pair, G comma H for
the group in the hash function if the

54
00:01:49,133 --> 00:01:53,482
对于二元组（G,H）成立，G是群 H是哈希函数

55
00:01:53,482 --> 00:01:57,776
following is true. Basically, if I choose
a random generator and then I choose

56
00:01:53,482 --> 00:01:57,776
如果以下条件为真 如果我选择一个随机生成元

57
00:01:57,776 --> 00:02:02,292
random exponents A and B in ZN and then I
also choose a random R and K, then the

58
00:01:57,776 --> 00:02:02,292
然后我随机选择Z_N中的指数对A和B 那么我也随机选一对R和K

59
00:02:02,292 --> 00:02:05,985
following distributions are
computationally indistinguishable. That

60
00:02:02,292 --> 00:02:05,985
那么下面两个分布是完全不可区分的

61
00:02:05,985 --> 00:02:09,658
is, if I give you G, G to the A, G to the
B, and then this hash value, this should

62
00:02:05,985 --> 00:02:09,658
也就是说 如果给你G G^A G^B 那么这个哈希值

63
00:02:09,658 --> 00:02:13,472
look familiar to you. This is the hash
value that's used in the ElGamal system to

64
00:02:09,658 --> 00:02:13,472
这你看起来应该感到熟悉 这就是在ElGamal系统中用来推出对称密钥加密的密钥

65
00:02:13,472 --> 00:02:17,380
derive the symmetric encryption key. What
we're saying is that this distribution is

66
00:02:13,472 --> 00:02:17,380
用的哈希值 我们要说的是这个分布是

67
00:02:17,380 --> 00:02:21,103
indistinguishable from a distribution
where you're also given. G, G to the A, G

68
00:02:17,380 --> 00:02:21,103
不能和另一个分布区分的 在另一个分布中你也被告知G G^B G^A

69
00:02:21,103 --> 00:02:25,390
to the B. But now, instead of giving the
hash, you're given just really random key.

70
00:02:21,103 --> 00:02:25,390
现在你不被告知哈希值而是真的随机数

71
00:02:25,390 --> 00:02:29,913
So what this assumption says is that the
symmetric key that was derived during

72
00:02:25,390 --> 00:02:29,913
所以这个假设说的是对称密钥在ElGamal系统中

73
00:02:29,913 --> 00:02:34,214
encryption in the ElGamal system,
essentially is indistinguishable from a

74
00:02:29,913 --> 00:02:34,214
被推出的 完全是不可区分的

75
00:02:34,214 --> 00:02:38,012
truly random key that is derived
independently from the rest of the

76
00:02:34,214 --> 00:02:38,012
与与其余部分独立被推出真正的随机数

77
00:02:38,012 --> 00:02:42,312
parameters of the system. It's a truly
independent random key, looks basically

78
00:02:38,012 --> 00:02:42,312
这是一个真正的独立随机密钥

79
00:02:42,312 --> 00:02:46,724
the same as the key that we used, to
derive from the G to the A and the G to

80
00:02:42,312 --> 00:02:46,724
看起来和我们用过的密钥基本相同 从G^B G^A

81
00:02:46,724 --> 00:02:51,895
the B. Now I'd like to point out that the
Hash Diffie-Hellman assumption is actually

82
00:02:46,724 --> 00:02:51,895
现在我想要指出 哈希Diffie_Helllman假设是

83
00:02:51,895 --> 00:02:56,297
a stronger assumption than the
Computational Diffie-Hellman assumption.

84
00:02:51,895 --> 00:02:56,297
一个比计算Diffie_Hellman强的假设

85
00:02:56,297 --> 00:03:00,575
The way to see that is using the contra
positive, that is suppose the

86
00:02:56,297 --> 00:03:00,575
证明方法是看其反面情况 即假设

87
00:03:00,575 --> 00:03:05,596
Computational Diffie-Hellman assumption
happens to be easy in the group G. Then I

88
00:03:00,575 --> 00:03:05,596
计算Diffie_Hellman假设在群G上容易解决

89
00:03:05,596 --> 00:03:10,866
claim that in fact the Hash Diffie-Hellman
assumption is also easy in the group G. In

90
00:03:05,596 --> 00:03:10,866
那么我要证明事实上哈希Diffie_Hellman假设在群G上也容易解决

91
00:03:10,866 --> 00:03:15,826
fact, I'll say for G, H and this is true
in fact for all hash functions where the

92
00:03:10,866 --> 00:03:15,826
事实上 我会说对于G和H 这是成立的 事实上 对所有哈希函数

93
00:03:15,826 --> 00:03:20,431
image of the hash function. It contains at
least two elements. In other words all I

94
00:03:15,826 --> 00:03:20,431
若哈希的像至少含有两个元素 换句话说

95
00:03:20,431 --> 00:03:24,695
want to say is that the Hash Diffie-Hellman assumption
and it's easy for all

96
00:03:20,431 --> 00:03:24,695
我想说的是哈希Diffie_hellman假设是容易的

97
00:03:24,695 --> 00:03:29,270
hash functions to go match everything to a
single point. Which is true for almost all

98
00:03:24,695 --> 00:03:29,270
如果所有哈希函数把一切都映射到一个点 这对我们感兴趣的

99
00:03:29,270 --> 00:03:33,054
hash functions of interest to us. So
actually, this is a really simple

100
00:03:29,270 --> 00:03:33,054
几乎所有哈希函数都是成立的 事实上 这个命题

101
00:03:33,054 --> 00:03:37,168
statement to prove. Basically, if the
Computational Diffie-Hellman assumption is easy, what that

102
00:03:33,054 --> 00:03:37,168
很容易证明 基本的 如果计算Diffie_hellman时假设是容易的

103
00:03:37,168 --> 00:03:41,665
says is that, given G to the A and G to the B, I can actually calculate G to the AB

104
00:03:37,168 --> 00:03:41,665
也就是说给定G^A G^B 我能算出G^AB

105
00:03:41,665 --> 00:03:46,162
myself. Cuz I know the hash function H, I
can calculate this complete value here. So

106
00:03:41,665 --> 00:03:46,162
因为我知道哈希函数H 我可以完全的计算这里的值

107
00:03:46,162 --> 00:03:50,440
if you give me a tuple that's
sampled from the left or sampled from the

108
00:03:46,162 --> 00:03:50,440
所以你给我一个取样自左边的元祖 或取样自右边的元祖

109
00:03:50,440 --> 00:03:54,706
right. I can very easily tell where it's
from. If it's sampled from the left, then

110
00:03:50,440 --> 00:03:54,706
我很容易就能告诉你它从哪边来 如果取样自左边

111
00:03:54,706 --> 00:03:59,227
once I've calculated G to the AB myself, I
can just test that the last element in the

112
00:03:54,706 --> 00:03:59,227
那么一但我已经计算了G^AB 我能够测试组中最后一个元素

113
00:03:59,227 --> 00:04:03,377
tuple is, in fact, the hash of G to
the B and G to the AB. If it is, I know

114
00:03:59,227 --> 00:04:03,377
是不是G^B和G^AB 如果是 我就知道

115
00:04:03,377 --> 00:04:07,707
the sample is from the left. If it isn't,
I know the sample is from the right. Okay,

116
00:04:03,377 --> 00:04:07,707
取样自左边 如果不是 我就知道取样自右边

117
00:04:07,707 --> 00:04:12,881
so this gives me pretty high advantage, in
distinguishing these two distributions. So

118
00:04:07,707 --> 00:04:12,881
这给我很大的优势 来区分这两个分布

119
00:04:12,881 --> 00:04:17,422
CDH is easy, it's very easy to see that
these distributions are distinguishable.

120
00:04:12,881 --> 00:04:17,422
所以CDH是容易的 很容易看出这两个分布是可区分的

121
00:04:17,422 --> 00:04:21,964
And this basically says that if the Hash
Diffie-Hellman is in fact hard, then CDH

122
00:04:17,422 --> 00:04:21,964
基本可以说 如果哈希Diffie_Hellman是困难的 那么CDH

123
00:04:21,964 --> 00:04:26,678
must also be hard. Which then we say, that
therefore the Hash Diffie-Hellman is a

124
00:04:21,964 --> 00:04:26,678
也会是困难的 之后我们就可以说 因此哈希DIffie_Hellman 是一个

125
00:04:26,678 --> 00:04:31,220
stronger assumption. There might be group
where CDH is hard, but HDH is not hard.

126
00:04:26,678 --> 00:04:31,220
更强的假设 可能有一些群CDH是困难的但HDH是不困难的

127
00:04:31,220 --> 00:04:35,938
Okay. So we say HDH is a
stronger assumption. If you found this

128
00:04:31,220 --> 00:04:35,938
所以我们说HDH是一个更强的假设 如果你觉得

129
00:04:35,938 --> 00:04:39,632
discussion of weak assumption versus
strong assumption confusing, it's not

130
00:04:35,938 --> 00:04:39,632
这种弱假设 强假设的对比困扰 这不是很重要

131
00:04:39,632 --> 00:04:43,626
really that important, it's fine to ignore
it. The important thing that I want to

132
00:04:39,632 --> 00:04:43,626
忽视掉也没什么关系 比较重要的我要展示的是

133
00:04:43,626 --> 00:04:47,470
show you is in fact that the Hash
Diffie-Hellman assumption is sufficient to

134
00:04:43,626 --> 00:04:47,470
事实上哈希Diffie_hellman假设是足够

135
00:04:47,470 --> 00:04:51,613
prove the semantic security of the ElGamal
system. Before we do that let me quickly

136
00:04:47,470 --> 00:04:51,613
来证明ElGamal系统的语义安全 在证明之前

137
00:04:51,613 --> 00:04:56,006
ask you the following puzzle just to make
sure the Hash Diffie-Hellman assumption is

138
00:04:51,613 --> 00:04:56,006
让我问下以下问题 保证哈希Diffie_hellman假设已经弄清楚了

139
00:04:56,006 --> 00:05:00,050
clear. So imagine our key space is {0, 1} to the 128. So 128 bit strings and our

140
00:04:56,006 --> 00:05:00,050
想象我们的空间是{0,1}^128 即128位字符串

141
00:05:00,050 --> 00:05:03,744
hash function will map pairs of group
elements into this 128 byte strings.

142
00:05:00,050 --> 00:05:03,744
我们的哈希函数吧一对群元素映射成128位字符串

143
00:05:03,744 --> 00:05:08,061
Suppose it so happens that we chose a hash
function Such that it always outputs

144
00:05:03,744 --> 00:05:08,061
假设我们选择一个哈希函数满足 其输出

145
00:05:08,061 --> 00:05:12,733
strings that begin with zero. In other
words, of the 128 bit strings the most

146
00:05:08,061 --> 00:05:12,733
以0开始 换句话说输出的128位字符串

147
00:05:12,733 --> 00:05:17,780
significant bit of the output is always
zero. If we chose such a hash function,

148
00:05:12,733 --> 00:05:17,780
最高位总是0 如果我们选了这样一个哈希函数

149
00:05:17,780 --> 00:05:23,677
does the Hash Diffie-Hellman assumption
hold for this pair, G comma H. So the

150
00:05:17,780 --> 00:05:23,677
那么哈希Diffie-Hellman假设对（G,H）还成立吗

151
00:05:23,677 --> 00:05:27,297
answer is no it doesn't hold. And the
reason is because it now very easy to

152
00:05:23,677 --> 00:05:27,297
答案是否定的 原因是因为现在很容易

153
00:05:27,297 --> 00:05:31,207
distinguish the two distributions that we
have here. The distribution on the left

154
00:05:27,297 --> 00:05:31,207
区分我们现有的两个分布 区分左边和右边的分布

155
00:05:31,207 --> 00:05:35,313
an the distribution on the right. And the
way you would distinguish the two is

156
00:05:31,207 --> 00:05:35,313
大家将要用来区分这两者的方法是

157
00:05:35,313 --> 00:05:39,501
basically if I choose a truly random
element in K, in {0, 1} to the 128,

158
00:05:35,313 --> 00:05:39,501
如果我在K=｛0，1｝^128中随机选择一个元素

159
00:05:39,501 --> 00:05:44,008
then mostly it can very well be zero with
probability one half. However, the tuple

160
00:05:39,501 --> 00:05:44,008
那么最高位为0的概率是一半

161
00:05:44,008 --> 00:05:48,509
that's given to me is chosen from the left
distribution, then the most significant

162
00:05:44,008 --> 00:05:48,509
然而当给我的样本是从左边分布选出的时候 哈希值的最高位

163
00:05:48,509 --> 00:05:53,010
bit of the hash will always be zero and
therefore if I see zero, I'm gonna say the

164
00:05:48,509 --> 00:05:53,010
一定是0 因此如果我看到0 我就可以

165
00:05:53,010 --> 00:05:57,072
distribution is a distribution on the
left. If I see one, I'm gonna say the

166
00:05:53,010 --> 00:05:57,072
区分出来是来自左边分布的 如果我看到1 我就可以说

167
00:05:57,072 --> 00:06:01,244
distribution is a distribution on the
right. That will give me advantage one

168
00:05:57,072 --> 00:06:01,244
是来自右边分布的 这将会给我一半的优势

169
00:06:01,244 --> 00:06:05,087
half in distinguishing these two
distributions. And so as a result, the

170
00:06:01,244 --> 00:06:05,087
来区分这两个分布 因此

171
00:06:05,087 --> 00:06:09,643
Hash Diffie-Hillman assumption is false in
this case. So clearly you could see that,

172
00:06:05,087 --> 00:06:09,643
哈希Diffie-Hellman假设在这种情况下不成立 大家可以清楚的看到

173
00:06:09,643 --> 00:06:13,760
even though CDH might be hard in a certain
group G, if you choose a bad hash

174
00:06:09,643 --> 00:06:13,760
即使CDH在群G上可能是困难的 如果你选择了一个不好的哈希函数

175
00:06:13,760 --> 00:06:18,367
function, then HDH will not hold for the
pair G comma H. Okay. But suppose it so

176
00:06:13,760 --> 00:06:18,367
HDH在（G,H）上也不成立 好的

177
00:06:18,367 --> 00:06:22,830
happens that we choose a group G and a
hash function H for which the Hash Diffie

178
00:06:18,367 --> 00:06:22,830
假设我们轩尼泽了一个群G和一个哈希函数H使得哈希Diffie-Hellman假设成立

179
00:06:22,830 --> 00:06:27,237
Hellman assumption holds. And in fact, if
you choose the hash function to be just

180
00:06:22,830 --> 00:06:27,237
实际上 如果你选择的哈希函数正好是SHA-256

181
00:06:27,237 --> 00:06:31,590
SHA-256, for all we know, the Hash
Diffie Hellman assumption holds in the

182
00:06:27,237 --> 00:06:31,590
正如我们所知道的 哈希Diffie-Hellman假设在群ZP*上成立

183
00:06:31,590 --> 00:06:35,983
group ZP star, and holds in elliptic curve
groups. My goal then is to show you that

184
00:06:31,590 --> 00:06:35,983
在椭圆曲线上也成立 我接下来的目标是给大家展示

185
00:06:35,983 --> 00:06:39,987
ElGamal is semantically secure under
the Hash Diffie-Hellman assumption. So let me

186
00:06:35,983 --> 00:06:39,987
EIGamal在哈希Diffie-Hellman假设下是语义安全的

187
00:06:39,987 --> 00:06:44,042
quickly remind you how theElGamal
system works. While we're gonna choose a

188
00:06:39,987 --> 00:06:44,042
所以让我来快速的提醒大家EIGamal系统是如何工作的 我们选择一个

189
00:06:44,042 --> 00:06:47,994
random generator G, we're gonna choose a
random 'a' in ZN, the public key is

190
00:06:44,042 --> 00:06:47,994
随机生成元G 随机选择ZN中的一个a

191
00:06:47,994 --> 00:06:52,254
gonna be G, and G to the A, the secret key
is simply gonna be A. And now here I wrote

192
00:06:47,994 --> 00:06:52,254
公钥就是（G,G^A） 私钥就是A

193
00:06:52,254 --> 00:06:56,412
shorthand for the ElGamal encryption.
Basically, what to encrypt, what we do is

194
00:06:52,254 --> 00:06:56,412
现在我在这里简写了EIGamal加密 想要加密时 我要做的是

195
00:06:56,412 --> 00:07:01,833
we choose a random B. We hash G as being H
to the B. Remember this H to the B is the

196
00:06:56,412 --> 00:07:01,833
选择一个随机数B 计算（G^B,H^B）的哈希值 记住这个H^B就是

197
00:07:01,833 --> 00:07:06,120
g^ab 这就是Diffie Hellman密钥 我们由哈希函数得到了一个

198
00:07:01,833 --> 00:07:06,120
value G to the AB. This is the Diffie
Hellman secret. The hash function gave us

199
00:07:06,120 --> 00:07:10,626
对称加密密钥k 我们用k对信息进行加密 然后我们输出g^b

200
00:07:06,120 --> 00:07:10,626
a symmetric encryption key K. We encrypt
the message with K, and we output G to the

201
00:07:10,626 --> 00:07:14,858
和对称密文 对于解密来说 我们要计算u的值和Diffie Hellman密钥g^a的值

202
00:07:10,626 --> 00:07:14,858
B and the symmetric cipher text. To
decrypt we have to value U, and the Diffie

203
00:07:14,858 --> 00:07:19,200
要导出一个对称密钥 我吗将密文解密

204
00:07:14,858 --> 00:07:19,200
Hellman secret, G to the A. To derive a
symmetric key, we decrypt the cipher text.

205
00:07:19,359 --> 00:07:23,445
然后我们输出明文m 我们来看一下如何论证

206
00:07:19,359 --> 00:07:23,445
And then we output the plaintext message m. So let's see how to argue that,

207
00:07:23,445 --> 00:07:27,744
关于ElGmail在这个哈希Diffie-Hillman的假设下是语义安全的这一点是相对容易的

208
00:07:23,445 --> 00:07:27,744
in fact, ElGamal is semantically secure under
this Hash Diffie-Hillman assumption is

209
00:07:27,744 --> 00:07:31,937
所以我们必须论证 记得我们之前讲的 在语义安全中

210
00:07:27,744 --> 00:07:31,937
fairly simple. So well we have to argue,
remember we had, in semantic security, we

211
00:07:31,937 --> 00:07:35,546
有两个实验 一个实验是 攻击者拥有信息m0的加密

212
00:07:31,937 --> 00:07:35,546
have these two experiments. One
experiment, the attacker is given the

213
00:07:35,546 --> 00:07:39,845
在另外一个实验中 攻击者拥有m1的加密

214
00:07:35,546 --> 00:07:39,845
encryption of m0. In the other experiment,
the attacker is given the encryption of m1.

215
00:07:39,845 --> 00:07:44,091
我将两个实验写在这里 你们注意到

216
00:07:39,845 --> 00:07:44,091
So I wrote the two experiments here. Here
you notice that the attacker starts by

217
00:07:44,091 --> 00:07:48,071
攻击者从向敌手发送公钥开始 敌手会

218
00:07:44,091 --> 00:07:48,071
sending off the public key to the
adversary. The adversary then chooses two

219
00:07:48,071 --> 00:07:52,727
选择两个长度相同的信息m0和m1 之后 如果他得到信息m0的EleGmal加密

220
00:07:48,071 --> 00:07:52,727
equal length messages m0 and m1. And then
if he gets the ElGamal encryption of M0,

221
00:07:52,727 --> 00:07:57,495
这是另一种对于ElGmal密文的速写的方法 相似的

222
00:07:52,727 --> 00:07:57,495
and a kind of rough shorthand for what
ElGamal ciphertext is, okay? Similarly, in

223
00:07:57,495 --> 00:08:01,660
加密1中 他仅仅得到了m1的加密而不是m0

224
00:07:57,495 --> 00:08:01,660
encryption one, he simply gets the
encryption of M1 instead of M0, and

225
00:08:01,660 --> 00:08:06,489
而且两个实验中所有条件都是相同的

226
00:08:01,660 --> 00:08:06,489
everything else is the same about these
two experiments. Now, because of the Hash

227
00:08:06,489 --> 00:08:11,257
在哈希Diffie-Hillman的假设前提下 我们知道即便攻击者看到了g g^a和g^b

228
00:08:06,489 --> 00:08:11,257
Diffie-Hellman assumption, we know that
even though the attacker got to see G, G

229
00:08:11,257 --> 00:08:16,267
我们知道g^b的哈希函数输出值

230
00:08:11,257 --> 00:08:16,267
to the a and G to the b, we know that the
output of the hash of G to the b, G to the

231
00:08:16,267 --> 00:08:20,981
而且g^ab和一个随机值之间是无法被区分的 所以 如果我们用一个

232
00:08:16,267 --> 00:08:20,981
ab is indistinguishable from random.
Therefore, if we replace the actual hash

233
00:08:20,981 --> 00:08:26,319
真正随机生成的独立于其他东西的密钥k来取代哈希函数

234
00:08:20,981 --> 00:08:26,319
function by a truly generated random key K
that's independent of everything else, by

235
00:08:26,319 --> 00:08:31,148
在哈希Diffie-Hillman的假设前提下 攻击者不能区分这两个游戏

236
00:08:26,319 --> 00:08:31,148
the Hash Diffie-Hellman assumption, the
attacker can't distinguish these two

237
00:08:31,148 --> 00:08:34,648
而且 这对于你们来说是一个简单的练习 来向你们展示如果他能够

238
00:08:31,148 --> 00:08:34,648
games. And again, it's a simple exercise
for you to show that if he could

239
00:08:34,648 --> 00:08:38,570
区分这两个游戏 那么他就将打破哈希Diffie-Hillman假设

240
00:08:34,648 --> 00:08:38,570
distinguish these two games, then he would
break the Hash Diffie-Hellman assumption.

241
00:08:38,570 --> 00:08:42,705
但是对于实验1来说也是一样的 攻击者也不能区分

242
00:08:38,570 --> 00:08:42,705
But then the same is true for experiment
one. The attacker also could not

243
00:08:42,705 --> 00:08:47,237
哈希函数的输出和一个真的用于生成挑战密文的随机密钥

244
00:08:42,705 --> 00:08:47,237
distinguish the output of the hash
function from a truly random key, that was

245
00:08:47,237 --> 00:08:51,341
我们观察这两个实验

246
00:08:47,237 --> 00:08:51,341
used to generate the challenge cipher
text. Okay. So now basically we look at

247
00:08:51,341 --> 00:08:55,297
我们就会发现 在这两个实验中到底发生了什么

248
00:08:51,341 --> 00:08:55,297
these two experiments and we realize that,
wait a minute, what's going on in these

249
00:08:55,297 --> 00:08:59,106
所有的条件基本上都是相同的除了在一个实验中

250
00:08:55,297 --> 00:08:59,106
two experiments? Basically everything is
the same except in one experiment, the

251
00:08:59,106 --> 00:09:02,866
攻击者得到了在对称系统下加密的m0 在另一个实验中

252
00:08:59,106 --> 00:09:02,866
attacker gets the encryption under
a symmetric encryption system of m0. In the

253
00:09:02,866 --> 00:09:06,920
他得到了一个在对称系统下m1的加密

254
00:09:02,866 --> 00:09:06,920
other one, he gets the encryption under a
symmetric encryption system of m1 and the

255
00:09:06,920 --> 00:09:10,973
而且 密钥是选择了一个随机的且与其他东西独立的

256
00:09:06,920 --> 00:09:10,973
key is chosen at random independently over
everything else. So by the fact that the

257
00:09:10,973 --> 00:09:14,440
在对称系统是语义安全的条件下 这两个游戏是无法相互区分的

258
00:09:10,973 --> 00:09:14,440
symmetric encryption system is
semantically secure, these two games are

259
00:09:14,440 --> 00:09:18,101
如果他们是可以区分的 那么攻击者就可以

260
00:09:14,440 --> 00:09:18,101
indistinguishable. If they were
distinguishable, then the attacker could

261
00:09:18,101 --> 00:09:21,984
打破这个对称系统的语义安全性

262
00:09:18,101 --> 00:09:21,984
break the semantic security of this
symmetric encryption system. So now we

263
00:09:21,984 --> 00:09:26,235
现在我们证明了这一串的等价性  而且这就证明了最初的游戏

264
00:09:21,984 --> 00:09:26,235
kinda prove this, you know, this chain of
equivalences. And that proves that the

265
00:09:26,235 --> 00:09:29,436
实际上是无法区分的 是可以计算的但是是无法区分的

266
00:09:26,235 --> 00:09:29,436
original games, in fact, are
indistinguishable, computationally

267
00:09:29,436 --> 00:09:33,320
所以ElGamal系统是语义安全的

268
00:09:29,436 --> 00:09:33,320
indistinguishable. And therefore, the
ElGamal system is semantically secure.

269
00:09:33,320 --> 00:09:37,769
正如我所说的 这是一个很容易的由图所诠释的证明

270
00:09:33,320 --> 00:09:37,769
Okay so it's like I said a very simple
proof by pictures and you can make this

271
00:09:37,769 --> 00:09:42,218
而且你们不用花太多功夫就可以把这个变成一个严谨的证明 但是仅有语义安全还是不够的

272
00:09:37,769 --> 00:09:42,218
into a rigorous proof without too much
work. But semantic security isn't enough,

273
00:09:42,218 --> 00:09:46,498
我们真正想要的是选择密文安全性 问题在于 ElGamal是选择密文安全的吗

274
00:09:42,218 --> 00:09:46,498
what we really want is chosen ciphertext
security, and the question is ElGamal chosen ciphertext

275
00:09:46,498 --> 00:09:50,496
事实是 要证明ElGamal的选择密文安全性

276
00:09:46,498 --> 00:09:50,496
secure? So it turns out to prove the
chosen ciphertext security of ElGamal we

277
00:09:50,496 --> 00:09:54,776
我们需要一个更强的假 哈希Diffie-Hellman或者是可计算的Diffie-Hellman

278
00:09:50,496 --> 00:09:54,776
actually need a stronger assumption, Hash Diffie-Hellman or Computational Diffie-Hellman

279
00:09:54,776 --> 00:09:59,000
实际上不足以证明系统的选择密文安全性 就我们所知

280
00:09:54,776 --> 00:09:59,000
are actually not enough to prove
chosen ciphertext security of the system as far

281
00:09:59,000 --> 00:10:03,008
所以要证明选择密文安全性 我们要引入一种新的

282
00:09:59,000 --> 00:10:03,008
as we know. So to prove chosen-ciphertext
security, I'm going to introduce a new

283
00:10:03,008 --> 00:10:06,447
被称为交互Diffie-Hellman的假设

284
00:10:03,008 --> 00:10:06,447
assumption called Interactive Diffie
Hellman assumption. And actually,

285
00:10:06,447 --> 00:10:10,384
事实上从技术来说我们不想要这种假设

286
00:10:06,447 --> 00:10:10,384
technically we really don't like this
assumption. And we're going to try to get

287
00:10:10,384 --> 00:10:14,727
之后需要避免它 但是现在

288
00:10:10,384 --> 00:10:14,727
rid of this, later on. But for now, we
just want to analyze the security of the

289
00:10:14,727 --> 00:10:19,056
要分析基本ELGamal选择密文攻击的安全性

290
00:10:14,727 --> 00:10:19,056
basic ElGamal system against chosen
ciphertext attack. So to argue that it is

291
00:10:19,056 --> 00:10:23,722
这个假设要说明的就是选择密文的安全性

292
00:10:19,056 --> 00:10:23,722
chosen ciphertext secure, here is what the
assumption says. Basically the challenger

293
00:10:23,722 --> 00:10:27,769
挑战者开启和敌手的较量 产生随机数G

294
00:10:23,722 --> 00:10:27,769
starts, you know, plays a game with the
adversary, he generates a random G,

295
00:10:27,769 --> 00:10:32,266
产生两个指数 然后照常告诉敌手a的G次方和b的G次方

296
00:10:27,769 --> 00:10:32,266
generates two exponents, and then he says
to the adversary as usual, G, G to the a

297
00:10:32,266 --> 00:10:36,509
敌手的目标是计算出Diffie-Helman密钥

298
00:10:32,266 --> 00:10:36,509
and G to the b. Now the adversary's goal
is basically to figure out the

299
00:10:36,509 --> 00:10:41,054
主要是ab的G次方 输出V的值如果V恰好等于AB的G次方

300
00:10:36,509 --> 00:10:41,054
Diffie-Helmman's secrets, mainly g to the
ab. He outputs the value of V and he wins

301
00:10:41,054 --> 00:10:45,278
敌手将赢得胜利

302
00:10:41,054 --> 00:10:45,278
the game if V happens to be equal to G to
the AB. So, so far this looks identical to

303
00:10:45,278 --> 00:10:48,943
至今这看上去和计算型Diffie―Hellman假设一致没什么不同

304
00:10:45,278 --> 00:10:48,943
the Computational Diffie-Hellman assumption,
there's no difference - this is

305
00:10:48,943 --> 00:10:52,862
就是除了交互Diffie―Hellman的计算型Diffie―Hellman假设

306
00:10:48,943 --> 00:10:52,862
the Computational Diffie-Hellman assumption
except in Interactive Diffie-Hellman would

307
00:10:52,862 --> 00:10:57,296
给攻击者更多的力量 正因为攻击者有了更多的力量

308
00:10:52,862 --> 00:10:57,296
give the attacker a little bit more power.
So because the attacker has more power,

309
00:10:57,296 --> 00:11:01,948
很难保证假设的安全性

310
00:10:57,296 --> 00:11:01,948
it's harder to satisfy the assumption,
which is why we say that this assumption

311
00:11:01,948 --> 00:11:06,188
这就是这种假设比计算型Diffie―Hellman强的原因

312
00:11:01,948 --> 00:11:06,188
is stronger than Computational
Diffie-Hellman. Now what is this power to be

313
00:11:06,188 --> 00:11:10,840
怎么给予这种力量 我们被给予查询的能力

314
00:11:06,188 --> 00:11:10,840
given? We are given the ability to make
queries. In particular, he gets to submit

315
00:11:10,840 --> 00:11:15,551
尤其是从组G提取两元素 因此U1 V1从组G中消失

316
00:11:10,840 --> 00:11:15,551
two elements from the group G, so U1, V1
disappear from the group G. And then he's

317
00:11:15,551 --> 00:11:20,149
然后被告知是否A的U1次方等于V1 等于则得到1

318
00:11:15,551 --> 00:11:20,149
told whether U1 to the A is equal to V1,
so he gets one. If you wanted the A equals

319
00:11:20,149 --> 00:11:24,179
如果想A等于V1则得到0 否则将是一种奇怪的查询

320
00:11:20,149 --> 00:11:24,179
to V1 get zero, otherwise it's kind of a
bizarre type of query. What, how does it

321
00:11:24,179 --> 00:11:28,007
是什么使得攻击成为可能性 但结果呢 我们需要能向攻击者答复这些查询

322
00:11:24,179 --> 00:11:28,007
be possibly help the attacker? But it
turns out we need to be able to answer

323
00:11:28,007 --> 00:11:31,834
这样能证明备选密文的安全性

324
00:11:28,007 --> 00:11:31,834
these types of queries to the adversary in
order to be able to prove chosen

325
00:11:31,834 --> 00:11:35,914
事实上能进行一次又一次的查询

326
00:11:31,834 --> 00:11:35,914
ciphertext security. And in fact, he can
do these type of queries again and again

327
00:11:35,914 --> 00:11:39,339
能够提出尽可能多的质疑

328
00:11:35,914 --> 00:11:39,339
and again. So he can issue as many
queries like these as he wants and then the

329
00:11:39,339 --> 00:11:43,217
假设指出没有这些质疑不能计算出Diffie―Hellman密钥

330
00:11:39,339 --> 00:11:43,217
assumption says that despite all these
queries he still can't figure out the

331
00:11:43,217 --> 00:11:47,146
换句话说除了质疑

332
00:11:43,217 --> 00:11:47,146
Diffie-Hellman secret, namely despite
making all these queries, the probability

333
00:11:47,146 --> 00:11:51,299
计算出Diffie―Hellman密钥的可能性非常小

334
00:11:47,146 --> 00:11:51,299
that he outputs the
Diffie-Hellman secret is negligible. Okay.

335
00:11:51,299 --> 00:11:55,516
很清楚了这种假设和计算型Diffie―Hellman相比

336
00:11:51,299 --> 00:11:55,516
So clearly if this assumption holds, that the Computational Diffie-Hellman assumption

337
00:11:55,516 --> 00:11:59,209
由于敌手有了更多的能量

338
00:11:55,516 --> 00:11:59,209
holds, because here, the adversary has more power,
and as a result we say that this assumption

339
00:11:59,209 --> 00:12:02,614
结果这种假设比计算型Diffie―Hellman更强

340
00:11:59,209 --> 00:12:02,614
is stronger that Computational Diffie-Hellman, the thing,
we really don't like about this

341
00:12:02,614 --> 00:12:06,019
我们对这种假设真的不满意的地方在于它的互动性

342
00:12:02,614 --> 00:12:06,019
assumption, is the fact, that, it's
interactive, and that the adversary is allowed to

343
00:12:06,019 --> 00:12:09,940
敌手允许向挑战者查询 正如我所说 要避免之后的互动

344
00:12:06,019 --> 00:12:09,940
make queries to the challenger, and as I
said, we're gonna trying to get rid

345
00:12:09,940 --> 00:12:14,462
但是现在我要告诉你是在互动Diffie―Hellman假设

346
00:12:09,940 --> 00:12:14,462
of this interaction later on. But for now
I'll tell you that under this Interactive

347
00:12:14,462 --> 00:12:18,722
以及对称加密系统提供真实可靠的加密的假设之下

348
00:12:14,462 --> 00:12:18,722
Diffie-Hellman assumption and under the
assumption that the symmetric encryption

349
00:12:18,722 --> 00:12:22,718
是在假设哈希函数是理想哈希函数的情况下

350
00:12:18,722 --> 00:12:22,718
system provides authenticated encryption, and
under the assumption that the hash

351
00:12:22,718 --> 00:12:26,610
我们把它称作随机预言

352
00:12:22,718 --> 00:12:26,610
function is kind of an ideal hash
function, what we call the random oracle,

353
00:12:26,610 --> 00:12:31,079
事实上ElGamal系统被选密文安全系统

354
00:12:26,610 --> 00:12:31,079
then in fact the ElGamal system is chosen ciphertext secure and again this

355
00:12:31,079 --> 00:12:35,028
并且这的R0指出随机预言模型中的事实

356
00:12:31,079 --> 00:12:35,028
RO here denotes the fact that it's in the
random oracle model. Which is not

357
00:12:35,028 --> 00:12:38,892
对于我们的目的来说不是那么重要

358
00:12:35,028 --> 00:12:38,892
important, so much for our purposes. The
main thing to remember that under

359
00:12:38,892 --> 00:12:42,756
重要的是记住这个预言也就是互动假设之下

360
00:12:38,892 --> 00:12:42,756
kind of this weird, interactive
assumption we can actually prove that

361
00:12:42,756 --> 00:12:46,938
我们的确能证明ElGamal是被选密文安全

362
00:12:42,756 --> 00:12:46,938
ElGamal is a chosen ciphertext secure.
And as far as we know this assumption

363
00:12:46,938 --> 00:12:51,332
据说这个假设实际运用于组ZP

364
00:12:46,938 --> 00:12:51,332
actually holds for the group ZP star.
So what we're gonna do next is basically

365
00:12:51,332 --> 00:12:55,567
下一步我们要做的是回答能否避免互动型假设

366
00:12:51,332 --> 00:12:55,567
answer this question of whether we can get
rid of the interactive assumption. Can we

367
00:12:55,567 --> 00:12:59,855
我们能证明安全性严格依赖于CDH吗

368
00:12:55,567 --> 00:12:59,855
prove security strictly based on CDH? And
similarly can we proof security without

369
00:12:59,855 --> 00:13:04,037
相应地我们能不依赖随机预言证明安全性吗

370
00:12:59,855 --> 00:13:04,037
relying on random oracles? Just you know
without having to assume, that the hash

371
00:13:04,037 --> 00:13:08,295
你只知道不是得假设哈希函数是理想得到

372
00:13:04,037 --> 00:13:08,295
function is ideal. Just you know, can we
prove security using a concrete hash

373
00:13:08,295 --> 00:13:11,600
你只知道我们能否用具体的哈希函数证明安全性 这个将在下节简要介绍

374
00:13:08,295 --> 00:13:11,600
function. And we'll do that very briefly
in the next segment.

