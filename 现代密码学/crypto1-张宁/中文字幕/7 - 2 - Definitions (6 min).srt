1
00:00:00,306 --> 00:00:03,017
上一节我们看了两个可以完全破坏CPA安全加密的安全性的主动攻击

2
00:00:03,017 --> 00:00:08,354
本节课我们将定义一个新概念

3
00:00:08,354 --> 00:00:12,183
叫做认证加密 即对主动攻击者也能保持安全

4
00:00:12,183 --> 00:00:16,978
在后面几节 我们将组建满足这个认证加密新概念的加密机制

5
00:00:16,978 --> 00:00:21,007
那什么是认证加密呢？

6
00:00:21,007 --> 00:00:25,866
认证加密是一个密码 通常是个加密算法

7
00:00:25,866 --> 00:00:31,234
取密钥 信息和一个可选择的临时值作为输入 输出一个密文

8
00:00:31,234 --> 00:00:35,795
解密算法通常输出一个信息 但是这个解密算法可以输出一个特殊符号

9
00:00:35,818 --> 00:00:40,594
叫做⊥ 当解密算法输出符号⊥时

10
00:00:40,627 --> 00:00:44,887
密文是无效的 而且应当被忽略

11
00:00:44,887 --> 00:00:49,198
唯一的要求是这个⊥不属于信息空间

12
00:00:49,198 --> 00:00:53,655
那么⊥就是唯一一个表示密文应当被拒绝的符号

13
00:00:53,655 --> 00:00:57,175
那一个认证加密系统是安全的是什么概念呢

14
00:00:57,175 --> 00:01:00,774
这个系统必须满足两个性质 第一个性质是

15
00:01:00,774 --> 00:01:05,035
它必须像之前一样对选择明文攻击是语义安全的

16
00:01:05,035 --> 00:01:08,881
第二个性质是这个系统必须满足密文完整性

17
00:01:08,881 --> 00:01:13,063
这意味着尽管攻击者

18
00:01:13,063 --> 00:01:17,145
能看到一些密文 他也不能生成另一个能被正确解密的密文

19
00:01:17,145 --> 00:01:21,360
换句话说 密文会被解密成其他非符号⊥的东西

20
00:01:21,360 --> 00:01:24,813
更精确地的说 让我们来看一下这个密文完整性游戏

21
00:01:24,813 --> 00:01:30,923
这里（E,D）是一个信息空间M上的密码 通常挑战者开始时

22
00:01:30,923 --> 00:01:35,635
选择一个随机密钥K 攻击者可以提交他选择的信息

23
00:01:35,635 --> 00:01:40,229
之后收到这些信息的加密

24
00:01:40,229 --> 00:01:44,617
这里C1是由攻击者选择的M1的加密

25
00:01:44,617 --> 00:01:47,677
攻击者可以反复执行这个操作 换句话说 攻击者提交M2并得到M2的加密结果  等等


26
00:01:47,677 --> 00:01:52,867
他提交更多的信息直到Mq为止

27
00:01:52,867 --> 00:01:58,499
然后获得了所有这些信息的加密结果 那么攻击者获得了q个他选择的信息的密文

28
00:01:58,499 --> 00:02:03,851
他的目标是产生某个新的有效密文

29
00:02:03,851 --> 00:02:08,883
如果这个攻击者产生的新密文被正确地解密了

30
00:02:08,883 --> 00:02:12,820
换句话说被解密成了非符号⊥的东西

31
00:02:12,820 --> 00:02:16,507
我们就说这个攻击者赢了 它是某个新密文

32
00:02:16,507 --> 00:02:20,722
换句话说 它不是选择明文攻击中给攻击者的密文之一

33
00:02:20,722 --> 00:02:24,499
在这个密文完整性游戏中我们通常

34
00:02:24,499 --> 00:02:28,963
将攻击者的优势定义为挑战者在游戏最后输出1的概率

35
00:02:28,963 --> 00:02:32,787
如果事实上对所有的有效攻击者

36
00:02:32,787 --> 00:02:37,754
其赢得游戏的优势都是可忽略的
我们就说这个密码具有密文完整性

37
00:02:37,754 --> 00:02:41,615
现在知道了什么是密文完整性 我们就可以定义

38
00:02:41,615 --> 00:02:45,090
认证加密 如果一个密码在选择明文攻击下是语义安全的

39
00:02:45,090 --> 00:02:48,787
同时也具有密文完整性

40
00:02:48,787 --> 00:02:54,304
那么我们就说这个密码有认证加密 举一个不好的例子

41
00:02:54,304 --> 00:02:59,456
带随机IV的CBC是不能提供认证加密的

42
00:02:59,456 --> 00:03:03,812
因为这将使攻击者很容易赢得密文完整性游戏

43
00:03:03,815 --> 00:03:07,080
攻击者只用提交一个随机的密文

44
00:03:07,080 --> 00:03:10,375
又因为CBC的解密算法永远不会输出⊥

45
00:03:10,375 --> 00:03:14,941
它总会输出一下信息 攻击者就很容易赢得游戏

46
00:03:14,941 --> 00:03:18,883
任何旧的随机密文会被解密成某些不是⊥的东西

47
00:03:18,883 --> 00:03:23,110
所以攻击者直接赢得了密文完整性游戏 这只是一个

48
00:03:23,110 --> 00:03:28,686
不提供认证加密的CPA安全密码的简单例子

49
00:03:28,686 --> 00:03:32,755
我想说两点有关认证加密的含义 第一点

50
00:03:32,755 --> 00:03:37,347
真实性 这意味着一个攻击者不能够欺骗接收者Bob

51
00:03:37,347 --> 00:03:42,026
让他认为Alice发送了一条她根本没有发送的确定的信息

52
00:03:42,026 --> 00:03:46,154
让我们看一下这是什么意思 攻击者与

53
00:03:46,154 --> 00:03:50,762
Alice取得联系 让Alice加密任意一条他所选择的信息

54
00:03:50,762 --> 00:03:56,516
这是一个选择明文攻击 攻击者的目标就是

55
00:03:56,516 --> 00:04:01,882
生成一些并不是由Alice创建的密文 又因为

56
00:04:01,882 --> 00:04:06,213
攻击者不能够赢得密文完整性的游戏 他就不能做到这一点

57
00:04:06,213 --> 00:04:10,914
这就是说 当Bob收到由解密算法正确解密的密文时

58
00:04:10,914 --> 00:04:14,570
他知道这个消息一定来自于一个知道

59
00:04:14,570 --> 00:04:19,317
密钥K的人 尤其是如果Alice是唯一一个知道密钥K的人

60
00:04:19,317 --> 00:04:23,325
那么他就知道密文确实是来源于Alice 并不是攻击者发送的某些修改

61
00:04:23,325 --> 00:04:28,307
唯一的注意的是

62
00:04:28,307 --> 00:04:32,099
加密认证并不能抵御重放攻击 尤其是当攻击者

63
00:04:32,099 --> 00:04:36,214
可以截取由Alice发给Bob的密文时 他可以将信息重放

64
00:04:36,214 --> 00:04:40,762
这使得两个信息对于Bob来说都是有效的 例如Alice可能发一条信息

65
00:04:40,762 --> 00:04:46,915
给Bob让他转100$给Charlie Charlie可以重放出这条信息

66
00:04:46,915 --> 00:04:51,498
结果就是Bob再转100$给Charlie

67
00:04:51,498 --> 00:04:55,419
事实上 任何一个加密协议都必须抵御重放攻击

68
00:04:55,419 --> 00:04:59,342
而这是被认证加密直接避免的

69
00:04:59,342 --> 00:05:02,930
接下来两节我们会回来讨论重放攻击 认证加密的第二个含义是

70
00:05:02,930 --> 00:05:06,987
它能抵御十分强大的攻击者

71
00:05:06,987 --> 00:05:11,480
例如可以运用所谓选择密文攻击的攻击者

72
00:05:11,480 --> 00:05:13,933
我们将在下节来讨论这个。【END】
