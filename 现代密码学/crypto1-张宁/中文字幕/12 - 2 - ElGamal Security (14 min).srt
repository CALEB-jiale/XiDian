1
00:00:00,000 --> 00:00:03,457
在本节中 我们将会研究EIGamal公钥加密系统的安全性

2
00:00:03,457 --> 00:00:07,105
让我来提醒一下大家 当我们第一次展示Diffie-Hellman协议的时候

3
00:00:07,105 --> 00:00:11,349
我们说过 其安全性是建立在假定

4
00:00:11,349 --> 00:00:14,972
给定G G^A和G^B上的 很难计算出

5
00:00:14,972 --> 00:00:19,269
Diffie-Hellman密钥G^A 然而这是攻击者不得不做的

6
00:00:19,269 --> 00:00:23,410
他看到Alice的贡献 看得Bob的贡献 他的目标是

7
00:00:23,410 --> 00:00:27,447
计算出Diffie-Hellman密钥 我们说过这个问题是很困难的

8
00:00:27,447 --> 00:00:31,329
这个问题的论断是困难的

9
00:00:31,329 --> 00:00:35,413
即Diffie-Hellman假设的计算是困难的 所以 让我们从更为精确的角度来看这个假设

10
00:00:35,413 --> 00:00:39,957
通常我们看一个N阶有限循环群

11
00:00:39,957 --> 00:00:43,944
G是一个群 大家应该把它想成ZP*

12
00:00:43,944 --> 00:00:47,569
但也可能是其他的群 比如椭圆曲线群 我们说

13
00:00:47,569 --> 00:00:51,727
计算Diffie-Hellman假设 我通常会用缩写

14
00:00:51,727 --> 00:00:56,053
CDH来代表Diffie-Hellman假设计算 我们会说这个假设在G上成立

15
00:00:56,053 --> 00:01:00,604
如果下列条件成立 即对所有的有效算法 如果我们选择一个

16
00:01:00,604 --> 00:01:04,761
随机生成元 然后我们随机选择ZN中的指数A B

17
00:01:04,761 --> 00:01:08,975
我们给定算法G为G^A G^B

18
00:01:08,975 --> 00:01:13,638
算法将会得出 Diffie Hellman密钥的可能性是非常低的

19
00:01:13,638 --> 00:01:18,368
如果这对所有有效算法都是成立的 那么我们说CHD假设在G上是成立的

20
00:01:18,368 --> 00:01:23,202
正如我说过的 CDH代表 Diffie Hellman假设算法 实际上 这个假设

21
00:01:23,202 --> 00:01:27,643
对于分析EIGamal系统的安全性并不理想

22
00:01:27,643 --> 00:01:31,768
因此我将要介绍一个更加有效的假设 叫做哈希 Diffie Hellman假设

23
00:01:31,768 --> 00:01:35,695
好的  Diffie Hellman假设是什么呢

24
00:01:35,695 --> 00:01:40,379
让我们来关注一下确定的群G 现在我们引入一个哈希函数H

25
00:01:40,379 --> 00:01:45,007
它把G中的元素映射到某个对称加密系统的密钥空间中

26
00:01:45,007 --> 00:01:49,133
那么我们就说哈希Diffie-Hellman假设 或简称HDH

27
00:01:49,133 --> 00:01:53,482
对于二元组（G,H）成立，G是群 H是哈希函数

28
00:01:53,482 --> 00:01:57,776
如果以下条件为真 如果我选择一个随机生成元

29
00:01:57,776 --> 00:02:02,292
然后我随机选择Z_N中的指数对A和B 那么我也随机选一对R和K

30
00:02:02,292 --> 00:02:05,985
那么下面两个分布是完全不可区分的

31
00:02:05,985 --> 00:02:09,658
也就是说 如果给你G G^A G^B 那么这个哈希值

32
00:02:09,658 --> 00:02:13,472
这你看起来应该感到熟悉 这就是在ElGamal系统中用来推出对称密钥加密的密钥

33
00:02:13,472 --> 00:02:17,380
用的哈希值 我们要说的是这个分布是

34
00:02:17,380 --> 00:02:21,103
不能和另一个分布区分的 在另一个分布中你也被告知G G^B G^A

35
00:02:21,103 --> 00:02:25,390
现在你不被告知哈希值而是真的随机数

36
00:02:25,390 --> 00:02:29,913
所以这个假设说的是对称密钥在ElGamal系统中

37
00:02:29,913 --> 00:02:34,214
被推出的 完全是不可区分的

38
00:02:34,214 --> 00:02:38,012
与与其余部分独立被推出真正的随机数

39
00:02:38,012 --> 00:02:42,312
这是一个真正的独立随机密钥

40
00:02:42,312 --> 00:02:46,724
看起来和我们用过的密钥基本相同 从G^B G^A

41
00:02:46,724 --> 00:02:51,895
现在我想要指出 哈希Diffie_Helllman假设是

42
00:02:51,895 --> 00:02:56,297
一个比计算Diffie_Hellman强的假设

43
00:02:56,297 --> 00:03:00,575
证明方法是看其反面情况 即假设

44
00:03:00,575 --> 00:03:05,596
计算Diffie_Hellman假设在群G上容易解决

45
00:03:05,596 --> 00:03:10,866
那么我要证明事实上哈希Diffie_Hellman假设在群G上也容易解决

46
00:03:10,866 --> 00:03:15,826
事实上 我会说对于G和H 这是成立的 事实上 对所有哈希函数

47
00:03:15,826 --> 00:03:20,431
若哈希的像至少含有两个元素 换句话说

48
00:03:20,431 --> 00:03:24,695
我想说的是哈希Diffie_hellman假设是容易的

49
00:03:24,695 --> 00:03:29,270
如果所有哈希函数把一切都映射到一个点 这对我们感兴趣的

50
00:03:29,270 --> 00:03:33,054
几乎所有哈希函数都是成立的 事实上 这个命题

51
00:03:33,054 --> 00:03:37,168
很容易证明 基本的 如果计算Diffie_hellman时假设是容易的

52
00:03:37,168 --> 00:03:41,665
也就是说给定G^A G^B 我能算出G^AB

53
00:03:41,665 --> 00:03:46,162
因为我知道哈希函数H 我可以完全的计算这里的值

54
00:03:46,162 --> 00:03:50,440
所以你给我一个取样自左边的元祖 或取样自右边的元祖

55
00:03:50,440 --> 00:03:54,706
我很容易就能告诉你它从哪边来 如果取样自左边

56
00:03:54,706 --> 00:03:59,227
那么一但我已经计算了G^AB 我能够测试组中最后一个元素

57
00:03:59,227 --> 00:04:03,377
是不是G^B和G^AB 如果是 我就知道

58
00:04:03,377 --> 00:04:07,707
取样自左边 如果不是 我就知道取样自右边

59
00:04:07,707 --> 00:04:12,881
这给我很大的优势 来区分这两个分布

60
00:04:12,881 --> 00:04:17,422
所以CDH是容易的 很容易看出这两个分布是可区分的

61
00:04:17,422 --> 00:04:21,964
基本可以说 如果哈希Diffie_Hellman是困难的 那么CDH

62
00:04:21,964 --> 00:04:26,678
也会是困难的 之后我们就可以说 因此哈希DIffie_Hellman 是一个

63
00:04:26,678 --> 00:04:31,220
更强的假设 可能有一些群CDH是困难的但HDH是不困难的

64
00:04:31,220 --> 00:04:35,938
所以我们说HDH是一个更强的假设 如果你觉得

65
00:04:35,938 --> 00:04:39,632
这种弱假设 强假设的对比困扰 这不是很重要

66
00:04:39,632 --> 00:04:43,626
忽视掉也没什么关系 比较重要的我要展示的是

67
00:04:43,626 --> 00:04:47,470
事实上哈希Diffie_hellman假设是足够

68
00:04:47,470 --> 00:04:51,613
来证明ElGamal系统的语义安全 在证明之前

69
00:04:51,613 --> 00:04:56,006
让我问下以下问题 保证哈希Diffie_hellman假设已经弄清楚了

70
00:04:56,006 --> 00:05:00,050
想象我们的空间是{0,1}^128 即128位字符串

71
00:05:00,050 --> 00:05:03,744
我们的哈希函数吧一对群元素映射成128位字符串

72
00:05:03,744 --> 00:05:08,061
假设我们选择一个哈希函数满足 其输出

73
00:05:08,061 --> 00:05:12,733
以0开始 换句话说输出的128位字符串

74
00:05:12,733 --> 00:05:17,780
最高位总是0 如果我们选了这样一个哈希函数

75
00:05:17,780 --> 00:05:23,677
那么哈希Diffie-Hellman假设对（G,H）还成立吗

76
00:05:23,677 --> 00:05:27,297
答案是否定的 原因是因为现在很容易

77
00:05:27,297 --> 00:05:31,207
区分我们现有的两个分布 区分左边和右边的分布

78
00:05:31,207 --> 00:05:35,313
大家将要用来区分这两者的方法是

79
00:05:35,313 --> 00:05:39,501
如果我在K=｛0，1｝^128中随机选择一个元素

80
00:05:39,501 --> 00:05:44,008
那么最高位为0的概率是一半

81
00:05:44,008 --> 00:05:48,509
然而当给我的样本是从左边分布选出的时候 哈希值的最高位

82
00:05:48,509 --> 00:05:53,010
一定是0 因此如果我看到0 我就可以

83
00:05:53,010 --> 00:05:57,072
区分出来是来自左边分布的 如果我看到1 我就可以说

84
00:05:57,072 --> 00:06:01,244
是来自右边分布的 这将会给我一半的优势

85
00:06:01,244 --> 00:06:05,087
来区分这两个分布 因此

86
00:06:05,087 --> 00:06:09,643
哈希Diffie-Hellman假设在这种情况下不成立 大家可以清楚的看到

87
00:06:09,643 --> 00:06:13,760
即使CDH在群G上可能是困难的 如果你选择了一个不好的哈希函数

88
00:06:13,760 --> 00:06:18,367
HDH在（G,H）上也不成立 好的

89
00:06:18,367 --> 00:06:22,830
假设我们轩尼泽了一个群G和一个哈希函数H使得哈希Diffie-Hellman假设成立

90
00:06:22,830 --> 00:06:27,237
实际上 如果你选择的哈希函数正好是SHA-256

91
00:06:27,237 --> 00:06:31,590
正如我们所知道的 哈希Diffie-Hellman假设在群ZP*上成立

92
00:06:31,590 --> 00:06:35,983
在椭圆曲线上也成立 我接下来的目标是给大家展示

93
00:06:35,983 --> 00:06:39,987
EIGamal在哈希Diffie-Hellman假设下是语义安全的

94
00:06:39,987 --> 00:06:44,042
所以让我来快速的提醒大家EIGamal系统是如何工作的 我们选择一个

95
00:06:44,042 --> 00:06:47,994
随机生成元G 随机选择ZN中的一个a

96
00:06:47,994 --> 00:06:52,254
公钥就是（G,G^A） 私钥就是A

97
00:06:52,254 --> 00:06:56,412
现在我在这里简写了EIGamal加密 想要加密时 我要做的是

98
00:06:56,412 --> 00:07:01,833
选择一个随机数B 计算（G^B,H^B）的哈希值 记住这个H^B就是

99
00:07:01,833 --> 00:07:06,120
g^ab 这就是Diffie Hellman密钥 我们由哈希函数得到了一个

100
00:07:06,120 --> 00:07:10,626
对称加密密钥k 我们用k对信息进行加密 然后我们输出g^b

101
00:07:10,626 --> 00:07:14,858
和对称密文 对于解密来说 我们要计算u的值和Diffie Hellman密钥g^a的值

102
00:07:14,858 --> 00:07:19,200
要导出一个对称密钥 我吗将密文解密

103
00:07:19,359 --> 00:07:23,445
然后我们输出明文m 我们来看一下如何论证

104
00:07:23,445 --> 00:07:27,744
关于ElGmail在这个哈希Diffie-Hillman的假设下是语义安全的这一点是相对容易的

105
00:07:27,744 --> 00:07:31,937
所以我们必须论证 记得我们之前讲的 在语义安全中

106
00:07:31,937 --> 00:07:35,546
有两个实验 一个实验是 攻击者拥有信息m0的加密

107
00:07:35,546 --> 00:07:39,845
在另外一个实验中 攻击者拥有m1的加密

108
00:07:39,845 --> 00:07:44,091
我将两个实验写在这里 你们注意到

109
00:07:44,091 --> 00:07:48,071
攻击者从向敌手发送公钥开始 敌手会

110
00:07:48,071 --> 00:07:52,727
选择两个长度相同的信息m0和m1 之后 如果他得到信息m0的EleGmal加密

111
00:07:52,727 --> 00:07:57,495
这是另一种对于ElGmal密文的速写的方法 相似的

112
00:07:57,495 --> 00:08:01,660
加密1中 他仅仅得到了m1的加密而不是m0

113
00:08:01,660 --> 00:08:06,489
而且两个实验中所有条件都是相同的

114
00:08:06,489 --> 00:08:11,257
在哈希Diffie-Hillman的假设前提下 我们知道即便攻击者看到了g g^a和g^b

115
00:08:11,257 --> 00:08:16,267
我们知道g^b的哈希函数输出值

116
00:08:16,267 --> 00:08:20,981
而且g^ab和一个随机值之间是无法被区分的 所以 如果我们用一个

117
00:08:20,981 --> 00:08:26,319
真正随机生成的独立于其他东西的密钥k来取代哈希函数

118
00:08:26,319 --> 00:08:31,148
在哈希Diffie-Hillman的假设前提下 攻击者不能区分这两个游戏

119
00:08:31,148 --> 00:08:34,648
而且 这对于你们来说是一个简单的练习 来向你们展示如果他能够

120
00:08:34,648 --> 00:08:38,570
区分这两个游戏 那么他就将打破哈希Diffie-Hillman假设

121
00:08:38,570 --> 00:08:42,705
但是对于实验1来说也是一样的 攻击者也不能区分

122
00:08:42,705 --> 00:08:47,237
哈希函数的输出和一个真的用于生成挑战密文的随机密钥

123
00:08:47,237 --> 00:08:51,341
我们观察这两个实验

124
00:08:51,341 --> 00:08:55,297
我们就会发现 在这两个实验中到底发生了什么

125
00:08:55,297 --> 00:08:59,106
所有的条件基本上都是相同的除了在一个实验中

126
00:08:59,106 --> 00:09:02,866
攻击者得到了在对称系统下加密的m0 在另一个实验中

127
00:09:02,866 --> 00:09:06,920
他得到了一个在对称系统下m1的加密

128
00:09:06,920 --> 00:09:10,973
而且 密钥是选择了一个随机的且与其他东西独立的

129
00:09:10,973 --> 00:09:14,440
在对称系统是语义安全的条件下 这两个游戏是无法相互区分的

130
00:09:14,440 --> 00:09:18,101
如果他们是可以区分的 那么攻击者就可以

131
00:09:18,101 --> 00:09:21,984
打破这个对称系统的语义安全性

132
00:09:21,984 --> 00:09:26,235
现在我们证明了这一串的等价性  而且这就证明了最初的游戏

133
00:09:26,235 --> 00:09:29,436
实际上是无法区分的 是可以计算的但是是无法区分的

134
00:09:29,436 --> 00:09:33,320
所以ElGamal系统是语义安全的

135
00:09:33,320 --> 00:09:37,769
正如我所说的 这是一个很容易的由图所诠释的证明

136
00:09:37,769 --> 00:09:42,218
而且你们不用花太多功夫就可以把这个变成一个严谨的证明 但是仅有语义安全还是不够的

137
00:09:42,218 --> 00:09:46,498
我们真正想要的是选择密文安全性 问题在于 ElGamal是选择密文安全的吗

138
00:09:46,498 --> 00:09:50,496
事实是 要证明ElGamal的选择密文安全性

139
00:09:50,496 --> 00:09:54,776
我们需要一个更强的假 哈希Diffie-Hellman或者是可计算的Diffie-Hellman

140
00:09:54,776 --> 00:09:59,000
实际上不足以证明系统的选择密文安全性 就我们所知

141
00:09:59,000 --> 00:10:03,008
所以要证明选择密文安全性 我们要引入一种新的

142
00:10:03,008 --> 00:10:06,447
被称为交互Diffie-Hellman的假设

143
00:10:06,447 --> 00:10:10,384
事实上从技术来说我们不想要这种假设

144
00:10:10,384 --> 00:10:14,727
之后需要避免它 但是现在

145
00:10:14,727 --> 00:10:19,056
要分析基本ELGamal选择密文攻击的安全性

146
00:10:19,056 --> 00:10:23,722
这个假设要说明的就是选择密文的安全性

147
00:10:23,722 --> 00:10:27,769
挑战者开启和敌手的较量 产生随机数G

148
00:10:27,769 --> 00:10:32,266
产生两个指数 然后照常告诉敌手a的G次方和b的G次方

149
00:10:32,266 --> 00:10:36,509
敌手的目标是计算出Diffie-Helman密钥

150
00:10:36,509 --> 00:10:41,054
主要是ab的G次方 输出V的值如果V恰好等于AB的G次方

151
00:10:41,054 --> 00:10:45,278
敌手将赢得胜利

152
00:10:45,278 --> 00:10:48,943
至今这看上去和计算型Diffie—Hellman假设一致没什么不同

153
00:10:48,943 --> 00:10:52,862
就是除了交互Diffie—Hellman的计算型Diffie—Hellman假设

154
00:10:52,862 --> 00:10:57,296
给攻击者更多的力量 正因为攻击者有了更多的力量

155
00:10:57,296 --> 00:11:01,948
很难保证假设的安全性

156
00:11:01,948 --> 00:11:06,188
这就是这种假设比计算型Diffie—Hellman强的原因

157
00:11:06,188 --> 00:11:10,840
怎么给予这种力量 我们被给予查询的能力

158
00:11:10,840 --> 00:11:15,551
尤其是从组G提取两元素 因此U1 V1从组G中消失

159
00:11:15,551 --> 00:11:20,149
然后被告知是否A的U1次方等于V1 等于则得到1

160
00:11:20,149 --> 00:11:24,179
如果想A等于V1则得到0 否则将是一种奇怪的查询

161
00:11:24,179 --> 00:11:28,007
是什么使得攻击成为可能性 但结果呢 我们需要能向攻击者答复这些查询

162
00:11:28,007 --> 00:11:31,834
这样能证明备选密文的安全性

163
00:11:31,834 --> 00:11:35,914
事实上能进行一次又一次的查询

164
00:11:35,914 --> 00:11:39,339
能够提出尽可能多的质疑

165
00:11:39,339 --> 00:11:43,217
假设指出没有这些质疑不能计算出Diffie—Hellman密钥

166
00:11:43,217 --> 00:11:47,146
换句话说除了质疑

167
00:11:47,146 --> 00:11:51,299
计算出Diffie—Hellman密钥的可能性非常小

168
00:11:51,299 --> 00:11:55,516
很清楚了这种假设和计算型Diffie—Hellman相比

169
00:11:55,516 --> 00:11:59,209
由于敌手有了更多的能量

170
00:11:59,209 --> 00:12:02,614
结果这种假设比计算型Diffie—Hellman更强

171
00:12:02,614 --> 00:12:06,019
我们对这种假设真的不满意的地方在于它的互动性

172
00:12:06,019 --> 00:12:09,940
敌手允许向挑战者查询 正如我所说 要避免之后的互动

173
00:12:09,940 --> 00:12:14,462
但是现在我要告诉你是在互动Diffie—Hellman假设

174
00:12:14,462 --> 00:12:18,722
以及对称加密系统提供真实可靠的加密的假设之下

175
00:12:18,722 --> 00:12:22,718
是在假设哈希函数是理想哈希函数的情况下

176
00:12:22,718 --> 00:12:26,610
我们把它称作随机预言

177
00:12:26,610 --> 00:12:31,079
事实上ElGamal系统被选密文安全系统

178
00:12:31,079 --> 00:12:35,028
并且这的R0指出随机预言模型中的事实

179
00:12:35,028 --> 00:12:38,892
对于我们的目的来说不是那么重要

180
00:12:38,892 --> 00:12:42,756
重要的是记住这个预言也就是互动假设之下

181
00:12:42,756 --> 00:12:46,938
我们的确能证明ElGamal是被选密文安全

182
00:12:46,938 --> 00:12:51,332
据说这个假设实际运用于组ZP

183
00:12:51,332 --> 00:12:55,567
下一步我们要做的是回答能否避免互动型假设

184
00:12:55,567 --> 00:12:59,855
我们能证明安全性严格依赖于CDH吗

185
00:12:59,855 --> 00:13:04,037
相应地我们能不依赖随机预言证明安全性吗

186
00:13:04,037 --> 00:13:08,295
你只知道不是得假设哈希函数是理想得到

187
00:13:08,295 --> 00:13:11,600
你只知道我们能否用具体的哈希函数证明安全性,
这个将在下节简要介绍。【END】

