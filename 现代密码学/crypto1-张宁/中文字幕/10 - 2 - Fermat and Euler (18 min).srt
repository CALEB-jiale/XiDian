1
00:00:00,000 --> 00:00:04,220
在前面一节我们讨论了模逆 我们说过

2
00:00:04,220 --> 00:00:08,238
欧几里德算法给了我们一个有效的寻找元素N的模逆的方式

3
00:00:08,238 --> 00:00:12,256
在这一节我们将按时间顺序继续向后看

4
00:00:12,256 --> 00:00:15,866
我们来到17、18世纪 我们将要讨论费马和欧拉的贡献的年代

5
00:00:15,866 --> 00:00:19,986
在此之前 让我们快速复习一下上一节所讨论的内容

6
00:00:19,986 --> 00:00:24,257
向往常一样 我将会用N代表正整数

7
00:00:24,257 --> 00:00:28,427
N也可以说是一个N位的正整数

8
00:00:28,427 --> 00:00:32,445
换句话说 它在2^n和2^(n+1)之间 同样 我用P代表素数

9
00:00:32,445 --> 00:00:36,761
现在我们说ZN是是一个从0到N-1的整数集合

10
00:00:36,761 --> 00:00:41,370
我们可以在模N的意义下对集合中的元素进行加法和乘法

11
00:00:41,370 --> 00:00:46,186
我们也说过ZN^*是集合ZN中全体可逆元素的集合

12
00:00:46,186 --> 00:00:51,243
我们证明过一个简单的引理 如果x与n互质那么X是可逆的

13
00:00:51,243 --> 00:00:55,879
我们不仅明白了什么样的元素是可逆的什么样的是不可逆的

14
00:00:55,879 --> 00:01:00,635
我们也给出了一个十分有效的建立在欧几里德扩展算法上面的算法

15
00:01:00,635 --> 00:01:05,572
去在ZN中找到一个元素X的逆

16
00:01:05,572 --> 00:01:10,388
我们说过 这个算法的复杂度是O(n^2)

17
00:01:10,388 --> 00:01:16,107
n是大写字母N的位数 好的 像我之前所说的

18
00:01:16,107 --> 00:01:21,037
我们将从古希腊时代来到17世纪

19
00:01:21,037 --> 00:01:26,276
讨论费马 费马提出了很多十分重要的理论

20
00:01:26,276 --> 00:01:31,206
我今天想给大家看其中一个重要的理论 假设我给大家一个素数P

21
00:01:31,206 --> 00:01:36,260
然后事实上对于ZP*中的任何一个元素 如果我研究X^(p-1)

22
00:01:36,260 --> 00:01:41,130
我将会在ZP中得到1 好的 现在让我们来快速的看一个例子

23
00:01:41,130 --> 00:01:46,061
假设我让P等于5 然后我来研究3^(P-1)

24
00:01:46,061 --> 00:01:50,645
换句话说 3^4 是81

25
00:01:50,645 --> 00:01:55,286
事实上 在模5的意义下它是1 这个例子满足了费马定理

26
00:01:55,286 --> 00:01:59,521
有趣的是 事实上费马自己并没有证明这个定理

27
00:01:59,521 --> 00:02:04,337
这个定理实际上要等到欧拉在将近100年之后才被证明

28
00:02:04,337 --> 00:02:09,122
事实上 他证明了这个定理的更具有普适性的一个版本

29
00:02:09,122 --> 00:02:14,154
让我们来看一下费马定理的一个简单应用 假设我在ZP*里寻找到一个元素X

30
00:02:14,154 --> 00:02:19,441
我想要提醒大家这里的P必须是素数 那么 现在我们知道什么

31
00:02:19,441 --> 00:02:24,664
我们知道X^(P-1)=1 我们可以把X^(P-1)

32
00:02:24,664 --> 00:02:29,573
写成X*X^(P-2) 那么现在我们知道了

33
00:02:29,573 --> 00:02:34,087
X*X^(P-2)正好是1

34
00:02:34,087 --> 00:02:39,310
也就是说 X^(P-2)就是X模P的逆

35
00:02:39,310 --> 00:02:44,042
这给了我们另一种找X模素数的逆的算法

36
00:02:44,042 --> 00:02:48,835
计算X^(P-2) 就会得到X的逆

37
00:02:48,835 --> 00:02:53,508
事实上这是一个寻找模素数的逆的好方法

38
00:02:53,508 --> 00:02:58,301
但是与欧几里德算法相比她有两点不足 第一

39
00:02:58,301 --> 00:03:02,528
它仅仅适用于模素数 而欧几里德算法还适用于模合数

40
00:03:02,528 --> 00:03:07,017
第二 事实上这个算法的效率是比较低的

41
00:03:07,017 --> 00:03:10,911
当我们讨论如何计算模指数时 我们将会在本章最后一节讨论

42
00:03:10,911 --> 00:03:15,345
大家会看的计算这个指数的算法复杂度

43
00:03:15,345 --> 00:03:19,792
事实上是P的大小的立方 所以这将会花掉大约(log P)^3的时间

44
00:03:19,792 --> 00:03:24,266
如果大家还记得 欧几里德算法可以在P的平方的时间里

45
00:03:24,266 --> 00:03:30,343
计算出逆

46
00:03:30,343 --> 00:03:36,512
所以这个算法不仅使用于素数不具有普适性 而且不是那么有效

47
00:03:36,512 --> 00:03:41,473
所以欧几里德赢了 但是 这个关于素数的定理是极其重要的

48
00:03:41,473 --> 00:03:47,506
我们将在未来的几周里大量用的它

49
00:03:47,506 --> 00:03:52,155
所以让我给大家快速的看一个费马定理的简单应用

50
00:03:52,155 --> 00:03:57,226
假设我们想生成一个大的随机素数 比如我们的素数要有1000位之类的长度

51
00:03:57,226 --> 00:04:02,006
我们寻找的这个素数的量级在2^1024

52
00:04:02,006 --> 00:04:06,724
这是一个非常简单的概率定理 我们将要做的就是

53
00:04:06,724 --> 00:04:11,938
从一个给定的区间里随机选择一个整数 然后我们会检测

54
00:04:12,124 --> 00:04:17,153
这个整数是否满足费马定理 换句话说 我们会用以2为底的数检测

55
00:04:17,153 --> 00:04:22,367
我们将会检测2^(P-1)在Z p中是否为1

56
00:04:22,367 --> 00:04:27,271
如果答案是否定的 等式不相等 那么我们可以

57
00:04:27,271 --> 00:04:33,003
确定我们选择的p不是素数 如果这发生了 我们只好

58
00:04:33,003 --> 00:04:37,284
回到第一步 换另一个素数 我们一遍遍的重复

59
00:04:37,284 --> 00:04:41,782
直到找到一个整数满足条件

60
00:04:41,782 --> 00:04:46,009
一旦我们找到整数满足这个条件 我们简单的输出它并停下来

61
00:04:46,009 --> 00:04:51,573
这结束了  这事实上比较难以证明

62
00:04:51,573 --> 00:04:56,305
但如果一个随机数通过测试 这很有可能是一个素数

63
00:04:56,305 --> 00:05:01,398
特别的 P不是素数的可能性很小

64
00:05:01,398 --> 00:05:06,191
小于2的-60次方 对1024比特范围的数

65
00:05:06,191 --> 00:05:10,744
随着数越来越大 通过测试但不是素数的可能性

66
00:05:10,744 --> 00:05:15,716
很快降到0 所以这是一个很有意思的算法

67
00:05:15,716 --> 00:05:20,455
你会发觉我们不保证输出一定是

68
00:05:20,455 --> 00:05:25,021
素数 我们只知道它很可能是一个素数

69
00:05:25,021 --> 00:05:29,587
换言之 他不是素数意味着我们很不幸运

70
00:05:29,587 --> 00:05:34,298
事实上不幸到一个可以忽略可能性的事件发生了

71
00:05:34,298 --> 00:05:40,230
另一个说法是 如果你看1024整数的序列 然后 这是素数的序列

72
00:05:40,230 --> 00:05:45,233
我在这写素数 然后这是一些合数

73
00:05:45,233 --> 00:05:50,805
这事实上会错误的通过测试 我们把错误的素数叫做F

74
00:05:50,805 --> 00:05:55,653
我们把他们叫做FP 对错误的素数 又很少的合数

75
00:05:55,653 --> 00:06:00,626
不是素数却会通过测试 但既然我们选择的是随机整数

76
00:06:00,626 --> 00:06:05,349
你看 我们在这里选择一个 这选一个 这样 当我们随机选数

77
00:06:05,349 --> 00:06:10,260
我们选到错误素数的可能性很小

78
00:06:10,260 --> 00:06:15,082
以至于我们可以忽略这个事件 换言之 我们可以证明

79
00:06:15,082 --> 00:06:20,591
错误素数的序列是相当小的 一个随机的选择

80
00:06:20,591 --> 00:06:25,266
不可能导致这样一个错误素数 现在我应该提到 事实上 有一个非常简单的

81
00:06:25,266 --> 00:06:28,960
算法生成素数 事实上 到现在为止不是最好的算法

82
00:06:28,960 --> 00:06:32,654
我们现在有好的多的算法 事实上 一旦你有一个备选的素数

83
00:06:32,654 --> 00:06:36,349
我们有非常高效的算法能

84
00:06:36,349 --> 00:06:40,498
明确证明这个备选素数是否真的是一个素数

85
00:06:40,498 --> 00:06:44,597
所以我们不用依赖于可能性状态 但费马测试是

86
00:06:44,597 --> 00:06:48,595
那么简单 以至于我就想要展示给你们这是一个生成素数的很简单的方法

87
00:06:48,595 --> 00:06:53,076
尽管事实上素数不是这么生成的 最后一点

88
00:06:53,076 --> 00:06:57,468
我想你们可能想知道 这个迭代需要重复多少次

89
00:06:57,468 --> 00:07:01,536
我们才能真正找到这个素数 这是一个经典的结果

90
00:07:01,536 --> 00:07:05,820
被叫做素数定理 是这样描述的 在几百次迭代后

91
00:07:05,820 --> 00:07:09,833
我们有很大概率找到素数 也就是说

92
00:07:09,833 --> 00:07:14,771
你需要准备几百次迭代而不是更多 现在我们理解了费马定理

93
00:07:14,771 --> 00:07:19,314
我想说的下一个点是讨论ZP*结构

94
00:07:19,314 --> 00:07:23,915
所以这里我们要向后看100年到十八世纪

95
00:07:23,915 --> 00:07:28,576
看看欧拉的工作 欧拉展示的第一个成果

96
00:07:28,576 --> 00:07:33,118
是现在被称为ZP*曾被叫做

97
00:07:33,118 --> 00:07:38,014
循环群 ZP*是循环群是什么意思呢？ 它意味着在

98
00:07:38,014 --> 00:07:42,734
ZP*中存在一些元素g 如果我们取g

99
00:07:42,734 --> 00:07:47,681
取一串g的幂次项 g方根 g平方 g四次 。。。

100
00:07:47,681 --> 00:07:52,590
直到我们得到g的P-2次 注意 不可能到g的P-2次外

101
00:07:52,590 --> 00:07:57,296
因为g的P-1次 依据费马定理等于1

102
00:07:57,296 --> 00:08:02,178
所以我们会循环回一 如果我们回到g的p-1次

103
00:08:02,178 --> 00:08:06,825
那么g的p次会等于g g的P-1次会等于g方根

104
00:08:06,825 --> 00:08:11,825
这样 我们事实上得到一个循环 如果我们继续取g的更高次

105
00:08:11,825 --> 00:08:16,590
那么我们不如在g的P-2次停下来

106
00:08:16,590 --> 00:08:21,413
欧拉展示的是 事实上有一个g如果你观察

107
00:08:21,413 --> 00:08:26,300
其所有幂次拓展称为ZP*

108
00:08:26,300 --> 00:08:31,239
g的幂次个我们所有ZP*中的元素 这样的元素

109
00:08:31,239 --> 00:08:35,997
我们称之为一个生成元 g是ZP*的一个生成元

111
00:08:35,997 --> 00:08:40,696
我们来看一个简单的例子。例如，p=7

112
00:08:40,696 --> 00:08:45,575
我们看3的所有幂。3^2,3^3,3^4,

113
00:08:45,575 --> 00:08:50,130
3^5,3^6,由费马小定理，我们已经知道

114
00:08:50,130 --> 00:08:54,917
3^6=1 mod 7.所以没有必要看3^6了

115
00:08:54,917 --> 00:08:59,644
我们知道它会是1.这里我给大家计算了所有这些幂

116
00:08:59,644 --> 00:09:04,431
我写下它们，大家可以看到我们得到了(Z7)*里

117
00:09:04,431 --> 00:09:09,313
所有的数。换句话说，我们获得了1.2.3.4.5.6

118
00:09:09,313 --> 00:09:14,599
所以我们说，3是Z7^*的一个生成元。现在我应该指出

119
00:09:14,599 --> 00:09:19,886
不是每个元素都是生成元。例如，如果我们看2的所有幂

120
00:09:19,886 --> 00:09:24,914
那不会生成整个群。特别地，如果我们看2^0

121
00:09:24,914 --> 00:09:29,650
会得到1，2^1=2,2^2=4

122
00:09:29,650 --> 00:09:34,455
2^3=8=1 mod 7,所以我们循环回来了

123
00:09:34,455 --> 00:09:39,766
那么2^4=2,2^5=4...等等

124
00:09:39,766 --> 00:09:44,697
那么如果我们看2的各个幂，我们只能获得1，2，4

125
00:09:44,697 --> 00:09:49,981
我们不能获得整个群，因此我们说2不是Z7^*的生成元

126
00:09:49,981 --> 00:09:55,831
一个很常用的是，给定Zp^*里的一个元素g

127
00:09:55,831 --> 00:10:01,901
如果我们看g的全体幂组成的集合，得到的集合就叫做g的生成群

128
00:10:01,901 --> 00:10:06,947
这些都是g的幂

129
00:10:06,947 --> 00:10:12,798
他们给了我们一个乘法群。这些技术术语并不重要

130
00:10:12,798 --> 00:10:18,397
重要的是，我们把所有这些g的幂，叫做g的生成群

131
00:10:18,397 --> 00:10:23,570
事实上这个记号我们不会经常使用：<g>

132
00:10:23,570 --> 00:10:30,010
<g>表示g的生成群，然后，我们把g的生成群的大小

133
00:10:30,010 --> 00:10:35,663
叫做g在Zp^*里的阶。换句话说

134
00:10:35,663 --> 00:10:40,626
g在Zp^*里的阶等于< g >的大小。另一种思考的方法是

135
00:10:40,626 --> 00:10:46,280
g的阶是满足在Zp中，g^a=1的最小的整数a

136
00:10:47,380 --> 00:10:52,838
是最小的次数，导致g的幂等于1

137
00:10:52,838 --> 00:10:58,566
非常容易看出这个等式。如果我们看g的所有幂

138
00:10:58,566 --> 00:11:04,024
我们看1，g,g^2,g^3....

139
00:11:04,024 --> 00:11:09,887
直到我们得到g^(|<g>-1|)。然后如果我们看

140
00:11:09,887 --> 00:11:15,420
g^|<g>|，根据定义，g^|<g>|=1

141
00:11:16,080 --> 00:11:22,000
好，再看更高的点没有意义了

142
00:11:22,000 --> 00:11:27,631
这里我们可以停止升幂次了。因此这个集合的大小

143
00:11:27,631 --> 00:11:33,263
事实上就是g的阶。大家可以看到这个阶是最小的幂次

144
00:11:33,263 --> 00:11:38,931
满足对应的g的幂在Zp中等于1.那么我希望说清楚了

145
00:11:38,931 --> 00:11:43,455
理解所有的这些记号需要费些功夫

146
00:11:43,455 --> 00:11:48,100
同时我们看几个例子，我们固定质素为7

147
00:11:48,100 --> 00:11:52,986
我们看其各个元素的阶

148
00:11:52,986 --> 00:11:57,752
3 mod 7的阶是多少？我们在问3模7的生成群的大小

149
00:11:57,752 --> 00:12:02,759
我们说过，3是Z7^*的一个生成元

150
00:12:02,759 --> 00:12:07,705
所以它生成了Z7^*的全部元素。Z7^*里共有6个元素

151
00:12:07,705 --> 00:12:12,758
所以3的阶等于6.类似的，我可以问

152
00:12:12,758 --> 00:12:17,421
2模7的阶是多少？事实上，我们已经见过答案了

153
00:12:17,421 --> 00:12:22,084
我问大家，2模7的阶是多少？看看大家能否解出答案

154
00:12:22,084 --> 00:12:28,549
那么答案是3，原因是如果我们看

155
00:12:28,549 --> 00:12:33,618
2模7的幂组成的集合，我们有1，2，2^2

156
00:12:33,618 --> 00:12:39,077
然后2^3又是1了。所以这些就是2模7的所有幂

157
00:12:39,077 --> 00:12:44,211
只有三个，因此2模7的阶是3

158
00:12:44,211 --> 00:12:49,215
我问大家一个有点难的问题:1模7的阶是多少？

159
00:12:49,215 --> 00:12:54,499
答案是1，因为大家看1的生成群

160
00:12:54,499 --> 00:12:58,633
只有一个数在1的生成群里，即数1

161
00:12:58,633 --> 00:13:02,608
如果我计算1的一组幂，我总是得到1

162
00:13:02,608 --> 00:13:07,060
所以1模7的阶是1，事实上，1模任意质数的阶总是1。

163
00:13:07,060 --> 00:13:12,518
现在有重要的拉格朗日定理，

164
00:13:12,518 --> 00:13:17,137
我这里说的仅仅是拉格朗日定理的一个特例

165
00:13:17,137 --> 00:13:22,309
拉格朗日定理意味着，如果你看g模p的阶

166
00:13:22,309 --> 00:13:27,112
这个阶始终整除p-1。那么在我们给大家的两个例子中

167
00:13:27,297 --> 00:13:32,100
6整除7-1，即6整除6，类似地，3整除7-1

168
00:13:32,100 --> 00:13:37,026
即3整除6.但这是很一般的

169
00:13:37,026 --> 00:13:41,333
你的阶始终是p-1的因子。事实上，我会告诉你

170
00:13:41,333 --> 00:13:45,177
也许你会想想这个谜题,由拉格朗日定理的这个事实

171
00:13:45,177 --> 00:13:49,179
某种意义上来说，费马定理是拉格朗日定理的直接推导

172
00:13:49,179 --> 00:13:53,340
顺便说一句，拉格朗日工作在十九世纪

173
00:13:54,580 --> 00:13:59,375
所以我们可以看到我们是怎么沿着历史前进的，我们从古希腊出发

174
00:13:59,375 --> 00:14:04,053
然后我们结束于十九世纪，我可以告诉大家更多的是

175
00:14:04,053 --> 00:14:09,376
更先进的密码学在二十世纪时被广泛的运用

176
00:14:09,376 --> 00:14:14,024
既然现在我们已经了解了Zp^*的结构，让我们把它推广的合数

177
00:14:14,024 --> 00:14:18,416
并看看Zn^*的结构，我想展示给你们什么是欧拉定理

178
00:14:18,416 --> 00:14:23,471
欧拉定理是费马定理的一个直接推广，所以欧拉定理定义如下函数

179
00:14:23,471 --> 00:14:28,044
给定一个整数N，欧拉定义了一个函数φ

180
00:14:28,044 --> 00:14:32,978
函数φ(M)，是ZN^*的大小

181
00:14:32,978 --> 00:14:37,190
有时也称为欧拉的φ函数，ZN^*的大小

182
00:14:37,190 --> 00:14:42,686
例如，我们已经看过Z12^*，我们说过Z12^*中含有四个元素

183
00:14:42,686 --> 00:14:48,521
1、5、7、11，因此我们说

184
00:14:48,521 --> 00:14:53,881
φ(12)只含有四个元素，问你们个问题，φ(P)是多少

185
00:14:53,881 --> 00:14:59,310
它是Zp^*的大小，所以事实上，我们说

186
00:14:59,310 --> 00:15:06,266
Zp^*含有除了0的所有的Zp的所有元素。因此

187
00:15:06,266 --> 00:15:12,335
对于任意质数p有φ(p)=p-1。现在，讲一个特例

188
00:15:12,335 --> 00:15:18,533
我在这说并且我们之后要用的RSA系统。如果N是由两质数之积

189
00:15:18,533 --> 00:15:23,282
那么φ(N)=N-P-Q+1

190
00:15:23,282 --> 00:15:28,277
让我展示给你们为什么，已知N是ZN^*的大小，

191
00:15:28,277 --> 00:15:33,045
现在我们需要移除所有与m不互素的元素。

192
00:15:33,045 --> 00:15:37,838
怎么判断一个元素是否和m不互素呢？则它要不被p整除

193
00:15:37,838 --> 00:15:42,632
或者被q整除。在0到m-1中有多少个元素能被p整除？

194
00:15:42,632 --> 00:15:47,079
一定有q个，那么有多少个元素能被q整除呢？

195
00:15:47,079 --> 00:15:51,757
这一定有p个。

196
00:15:51,757 --> 00:15:55,973
所以我们减去p来除去那些被q整除的数。我们减去q来除去那些被p整除的数

197
00:15:55,973 --> 00:16:00,593
注意到我们减了两次0

198
00:16:00,593 --> 00:16:05,776
因为0既是P的除数也是Q的除数。因此，我们加1来保证我们只减了一次0

199
00:16:05,776 --> 00:16:12,020
所以不难得到，φ(N)=N-P-Q+1

200
00:16:12,020 --> 00:16:18,264
另一种表达方式是φ(N)=(P-1)*(Q-1)，这是我们一会要用到的定理

201
00:16:18,264 --> 00:16:24,599
我们回到之前谈论的RSA系统。目前为止，只是定义了欧拉函数φ

202
00:16:24,599 --> 00:16:30,275
但欧拉很好的运用了这个函数φ

203
00:16:30,275 --> 00:16:35,690
他证明出这个惊人的事实

204
00:16:35,690 --> 00:16:41,104
如果你给我任意一个属于ZN^*的元素X。事实上，X的φ(N)次方等于ZN^*中的1，

205
00:16:41,104 --> 00:16:46,060
现在你可以明白欧拉定理是费马定理的一个推广

206
00:16:46,060 --> 00:16:50,678
特别的，费马定理只应用于质数，我们知道

207
00:16:50,678 --> 00:16:55,239
对于质数p，φ(p)=p-1，换句话说，如果N是质数，

208
00:16:55,239 --> 00:16:59,913
那么我们只用简单的计算出p-1

209
00:16:59,913 --> 00:17:04,494
欧拉定理的美妙在于它不仅适用于质数，还适用于合数，

210
00:17:04,494 --> 00:17:08,892
让我们来看些例子，看5的φ(12)次方

211
00:17:08,892 --> 00:17:16,462
所以5是Z12^*中的元素。如果我们算出5的φ(12)次方

212
00:17:16,462 --> 00:17:21,743
那么我们就可以得到Z12^*中的1，我么知道φ(12)=4,

213
00:17:21,743 --> 00:17:27,155
我们可以求出5的4次方。5的4次方等于625

214
00:17:27,155 --> 00:17:32,037
很容易算出5^4等于1模12。这是用例证

215
00:17:32,037 --> 00:17:36,227
但不是证明，这只是一个例子

216
00:17:36,227 --> 00:17:40,468
但事实上不难证明欧拉定理，事实上，我将告诉大家

217
00:17:40,468 --> 00:17:44,555
欧拉定理是拉格朗日定理的特例

218
00:17:44,555 --> 00:17:48,900
我们也说欧拉定理是费马定理的一个推广

219
00:17:49,880 --> 00:17:53,888
实际上，我们将看到欧拉定理是RSA加密系统的基础

220
00:17:53,888 --> 00:17:58,230
这节课就到这了，我们将在下节课继续

221
00:17:58,230 --> 00:18:03,922
讨论模二次等式的问题。【END】

